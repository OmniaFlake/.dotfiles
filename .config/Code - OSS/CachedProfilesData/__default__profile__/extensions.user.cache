{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/omnia/.vscode-oss/extensions/extensions.json","path":"/home/omnia/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1717822296377,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.90.0","productDate":"2024-06-07T07:53:34.265Z","productCommit":"89de5a8d4d6205e5b11647eb6a74844ca23d2573","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"reditorsupport.r","uuid":"4dfff9f4-ff9b-47bb-b0d1-c54e18d8febb"},"manifest":{"name":"r","displayName":"R","description":"R Extension for Visual Studio Code","version":"2.8.4","author":"REditorSupport","license":"SEE LICENSE IN LICENSE","publisher":"REditorSupport","icon":"images/Rlogo.png","repository":{"type":"git","url":"https://github.com/REditorSupport/vscode-R"},"bugs":{"url":"https://github.com/REditorSupport/vscode-R/issues"},"categories":["Programming Languages","Snippets","Other"],"keywords":["R","R language","R documentation","R Markdown"],"engines":{"vscode":"^1.75.0"},"activationEvents":["workspaceContains:**/*.{rproj,Rproj,r,R,rd,Rd,rmd,Rmd}","onCommand:r.runSelectionInActiveTerm","onWebviewPanel:rhelp"],"main":"./dist/extension","contributes":{"terminal":{"profiles":[{"title":"R Terminal","id":"r.terminal-profile"}]},"viewsContainers":{"activitybar":[{"id":"workspaceViewer","title":"R","icon":"./images/Rlogo.svg"}]},"views":{"workspaceViewer":[{"id":"workspaceViewer","name":"Workspace","icon":"./images/Rlogo.svg","contextualTitle":"R"},{"id":"rHelpPages","name":"Help Pages","icon":"./images/Rlogo.svg","contextualTitle":"R","when":"r.helpViewer.show"},{"id":"rLiveShare","name":"Live Share Controls","icon":"./images/Rlogo.svg","contextualTitle":"R","when":"r.WorkspaceViewer:show && !r.liveShare:isGuest","visibility":"collapsed"}]},"viewsWelcome":[{"view":"workspaceViewer","when":"!r.WorkspaceViewer:show","contents":"R workspace viewer requires that the [session watcher be enabled](https://github.com/REditorSupport/vscode-R/wiki/R-Session-watcher)."},{"view":"rHelpPages","contents":"R Help Pages"},{"view":"rLiveShare","contents":"R Live Share not active.","when":"!r.liveShare:aborted"},{"view":"rLiveShare","contents":"Could not connect to Live Share service.","when":"r.liveShare:aborted"}],"languages":[{"id":"r","extensions":[".r",".rhistory",".rprofile",".rt"],"aliases":["R","r"],"firstLine":"^#!/.*\\bRscript\\b","configuration":"./language/r-configuration.json"},{"id":"rd","extensions":[".rd"],"aliases":["R documentation","r documentation"],"configuration":"./language/rd-configuration.json"},{"id":"rmd","extensions":[".rmd"],"aliases":["R Markdown","r markdown"],"configuration":"./language/rmd-configuration.json"},{"id":"debian-control.r","extensions":[".Rproj"],"aliases":["R DCF"],"filenames":["DESCRIPTION",".lintr"],"configuration":"./language/dcf-configuration.json"},{"id":"namespace.r","aliases":["R NAMESPACE"],"filenames":["NAMESPACE"],"configuration":"./language/rnamespace-configuration.json"},{"id":"buildignore.r","aliases":["R ignore"],"filenames":[".Rbuildignore"],"configuration":"./language/rbuildignore-configuration.json"}],"snippets":[{"language":"r","path":"./snippets/r-snippets.json"},{"language":"rd","path":"./snippets/r-snippets.json"},{"language":"rmd","path":"./snippets/rmarkdown.json"}],"grammars":[{"language":"r","scopeName":"source.r","path":"./syntax/r.json"},{"language":"rd","scopeName":"text.tex.latex.rd","path":"./syntax/Rd (R Documentation).json"},{"language":"debian-control.r","scopeName":"debian-control.r","path":"./syntax/dcf.json","embeddedLanguages":{"meta.embedded.block.r":"r"}},{"language":"rmd","scopeName":"text.html.rmarkdown","path":"./syntax/RMarkdown.json","embeddedLanguages":{"meta.embedded.block.html":"html","source.js":"javascript","source.css":"css","meta.embedded.block.frontmatter":"yaml","meta.embedded.block.css":"css","meta.embedded.block.ini":"ini","meta.embedded.block.java":"java","meta.embedded.block.lua":"lua","meta.embedded.block.makefile":"makefile","meta.embedded.block.perl":"perl","meta.embedded.block.r":"r","meta.embedded.block.ruby":"ruby","meta.embedded.block.php":"php","meta.embedded.block.sql":"sql","meta.embedded.block.vs_net":"vs_net","meta.embedded.block.xml":"xml","meta.embedded.block.xsl":"xsl","meta.embedded.block.yaml":"yaml","meta.embedded.block.dosbatch":"dosbatch","meta.embedded.block.clojure":"clojure","meta.embedded.block.coffee":"coffee","meta.embedded.block.c":"c","meta.embedded.block.cpp":"cpp","meta.embedded.block.diff":"diff","meta.embedded.block.dockerfile":"dockerfile","meta.embedded.block.go":"go","meta.embedded.block.groovy":"groovy","meta.embedded.block.pug":"jade","meta.embedded.block.javascript":"javascript","meta.embedded.block.json":"json","meta.embedded.block.less":"less","meta.embedded.block.objc":"objc","meta.embedded.block.scss":"scss","meta.embedded.block.perl6":"perl6","meta.embedded.block.powershell":"powershell","meta.embedded.block.python":"python","meta.embedded.block.rust":"rust","meta.embedded.block.scala":"scala","meta.embedded.block.shellscript":"shellscript","meta.embedded.block.typescript":"typescript","meta.embedded.block.typescriptreact":"typescriptreact","meta.embedded.block.csharp":"csharp","meta.embedded.block.fsharp":"fsharp"}},{"scopeName":"text.html.markdown.redcarpet","path":"./syntax/Markdown Redcarpet.json","injectTo":["text.html.rmarkdown"],"embeddedLanguages":{"meta.embedded.block.c":"c","meta.embedded.block.cpp":"cpp","meta.embedded.block.r":"r","meta.embedded.block.yaml":"yaml"}},{"path":"./syntax/Rcpp.json","scopeName":"comment.block.r","injectTo":["source.cpp"]},{"language":"namespace.r","scopeName":"namespace.r","path":"./syntax/rnamespace.json"},{"language":"buildignore.r","scopeName":"buildignore.r","path":"./syntax/rbuildignore.json"}],"commands":[{"command":"r.workspaceViewer.refreshEntry","title":"Manual Refresh","icon":"$(refresh)","category":"R Workspace Viewer","enablement":"rSessionActive"},{"command":"r.workspaceViewer.view","title":"View","icon":"$(open-preview)","category":"R Workspace Viewer"},{"command":"r.workspaceViewer.clear","title":"Clear environment","icon":"$(clear-all)","category":"R Workspace Viewer","enablement":"rSessionActive"},{"command":"r.workspaceViewer.remove","title":"Remove","icon":"$(close)","category":"R Workspace Viewer"},{"command":"r.workspaceViewer.save","title":"Save workspace","icon":"$(save)","category":"R Workspace Viewer","enablement":"rSessionActive"},{"command":"r.workspaceViewer.load","title":"Load workspace","icon":"$(folder-opened)","category":"R Workspace Viewer"},{"command":"r.workspaceViewer.package.showQuickPick","title":"Show QuickPick","category":"R Workspace Viewer"},{"command":"r.browser.refresh","title":"Refresh","icon":"$(refresh)","category":"R"},{"command":"r.browser.openExternal","title":"Open in external browser","icon":"$(link-external)","category":"R"},{"command":"r.showHelp","title":"Show help","category":"R"},{"command":"editor.action.webvieweditor.showFind","title":"R: Find in WebView","icon":"$(search)","category":"R"},{"title":"Create R terminal","category":"R","command":"r.createRTerm"},{"title":"Run Source","category":"R","command":"r.runSource","icon":"$(run)"},{"title":"Knit Rmd","category":"R","command":"r.knitRmd","icon":"$(run-below)"},{"title":"Knit Rmd To PDF","category":"R","command":"r.knitRmdToPdf"},{"title":"Knit Rmd To HTML","category":"R","command":"r.knitRmdToHtml"},{"title":"Knit Rmd To All Formats","category":"R","command":"r.knitRmdToAll"},{"title":"Run Source with Echo","category":"R","command":"r.runSourcewithEcho"},{"title":"Run Selection/Line","category":"R","command":"r.runSelection"},{"title":"Show number of rows for selected object","category":"R","command":"r.nrow"},{"title":"Show length for a selected object","category":"R","command":"r.length"},{"title":"Show first part of a selected object","category":"R","command":"r.head"},{"title":"Show first part of a selected object (transposed)","category":"R","command":"r.thead"},{"title":"Show names for a selected object","category":"R","command":"r.names"},{"title":"View selected object","category":"R","command":"r.view"},{"title":"Create gitignore","category":"R","command":"r.createGitignore"},{"title":"Create .lintr to the workspace","category":"R","command":"r.createLintrConfig"},{"title":"Preview Dataframe","category":"R","command":"r.previewDataframe"},{"title":"Preview Environment","category":"R","command":"r.previewEnvironment"},{"title":"Load All","category":"R Package","command":"r.loadAll"},{"title":"Build","category":"R Package","command":"r.build"},{"title":"Build Binary","category":"R Package","command":"r.buildBinary"},{"title":"Check","category":"R Package","command":"r.check"},{"title":"Document","category":"R Package","command":"r.document"},{"title":"Install","category":"R Package","command":"r.install"},{"title":"Test","category":"R Package","command":"r.test"},{"title":"Generate C/C++ Configuration","category":"R Package","command":"r.generateCCppProperties"},{"title":"Attach Active Terminal","category":"R","command":"r.attachActive"},{"title":"Run Command With Selection or Word in Terminal","category":"R","command":"r.runCommandWithSelectionOrWord"},{"title":"Run Command With Editor Path in Terminal","category":"R","command":"r.runCommandWithEditorPath"},{"title":"Run Command in Terminal","category":"R","command":"r.runCommand"},{"title":"Run from Beginning to Line","category":"R","command":"r.runFromBeginningToLine"},{"title":"Run from Line to End","category":"R","command":"r.runFromLineToEnd"},{"title":"Run Selection/Line (Retain Cursor)","category":"R","command":"r.runSelectionRetainCursor"},{"title":"Select Current Chunk","category":"R","command":"r.selectCurrentChunk"},{"title":"Run Current Chunk","category":"R","command":"r.runCurrentChunk"},{"title":"Run Current Chunk and Move to Next Chunk","category":"R","command":"r.runCurrentChunkAndMove"},{"title":"Run Previous Chunk","category":"R","command":"r.runPreviousChunk"},{"title":"Run Next Chunk","category":"R","command":"r.runNextChunk"},{"title":"Run Above Chunks","category":"R","command":"r.runAboveChunks"},{"title":"Run Current and Below Chunks","category":"R","command":"r.runCurrentAndBelowChunks"},{"title":"Run Below Chunks","category":"R","command":"r.runBelowChunks"},{"title":"Run All Chunks","category":"R","command":"r.runAllChunks"},{"title":"Go to Previous Chunk","category":"R","command":"r.goToPreviousChunk"},{"title":"Go to Next Chunk","category":"R","command":"r.goToNextChunk"},{"title":"New Draft","category":"R Markdown","command":"r.rmarkdown.newDraft"},{"title":"R Markdown (rmd)","category":"R Markdown","when":false,"command":"r.rmarkdown.newFileDraft"},{"title":"R Document (r)","category":"R","when":false,"command":"r.newFileDocument"},{"command":"r.rmarkdown.setKnitDirectory","title":"Set Knit directory","icon":"$(zap)","category":"R Markdown"},{"command":"r.rmarkdown.showPreviewToSide","title":"Open Preview to the Side","icon":"$(open-preview)","category":"R Markdown"},{"command":"r.rmarkdown.showPreview","title":"Open Preview","icon":"$(open-preview)","category":"R Markdown"},{"command":"r.rmarkdown.preview.refresh","title":"Refresh Preview","icon":"$(refresh)","category":"R Markdown"},{"command":"r.rmarkdown.preview.openExternal","title":"Open in External Browser","icon":"$(link-external)","category":"R Markdown"},{"command":"r.rmarkdown.preview.showSource","title":"Show Source","icon":"$(go-to-file)","category":"R Markdown"},{"title":"Toggle Style","category":"R Markdown","command":"r.rmarkdown.preview.toggleStyle","icon":"$(symbol-color)"},{"title":"Enable Auto Refresh","category":"R Markdown","command":"r.rmarkdown.preview.enableAutoRefresh","icon":"$(sync)"},{"title":"Disable Auto Refresh","category":"R Markdown","command":"r.rmarkdown.preview.disableAutoRefresh","icon":"$(sync-ignored)"},{"title":"Launch RStudio Addin","category":"R","command":"r.launchAddinPicker"},{"command":"r.helpPanel.back","title":"Go Back","category":"R Help Panel","enablement":"r.helpPanel.canGoBack","icon":"$(arrow-left)"},{"command":"r.helpPanel.forward","title":"Go Forward","category":"R Help Panel","enablement":"r.helpPanel.canGoForward","icon":"$(arrow-right)"},{"command":"r.helpPanel.openExternal","title":"Open in external browser","category":"R Help Panel","enablement":"r.helpPanel.canOpenExternal","icon":"$(link-external)"},{"title":"Search Package Topics","category":"R Help Panel","command":"r.helpPanel.searchPackage","icon":"$(search)"},{"title":"Open Topic in new Panel","category":"R Help Panel","command":"r.helpPanel.openInNewPanel","icon":"$(add)"},{"title":"Clear Cached Files","category":"R Help Panel","command":"r.helpPanel.clearCache","icon":"$(refresh)"},{"title":"Filter Packages","category":"R Help Panel","command":"r.helpPanel.filterPackages","icon":"$(filter)"},{"title":"Remove from favorites","category":"R Help Panel","command":"r.helpPanel.removeFromFavorites","icon":"$(star-full)"},{"title":"Add to favorites","category":"R Help Panel","command":"r.helpPanel.addToFavorites","icon":"$(star-empty)"},{"title":"Show all packages","category":"R Help Panel","command":"r.helpPanel.showAllPackages","icon":"$(star-full)"},{"title":"Show only favorites","category":"R Help Panel","command":"r.helpPanel.showOnlyFavorites","icon":"$(star-empty)"},{"title":"Remove Package","category":"R Help Panel","command":"r.helpPanel.removePackage","icon":"$(trash)"},{"title":"Update Installed Packages","category":"R Help Panel","command":"r.helpPanel.updateInstalledPackages","icon":"$(clone)"},{"title":"Update/reinstall Package","category":"R Help Panel","command":"r.helpPanel.updatePackage","icon":"$(cloud-download)"},{"title":"Install multiple packages","category":"R Help Panel","command":"r.helpPanel.installPackages","icon":"$(expand-all)"},{"title":"Show QuickPick","category":"R Help Panel","command":"r.helpPanel.showQuickPick","icon":"$(zap)"},{"title":"Summarize Identical Topics","category":"R Help Panel","command":"r.helpPanel.summarizeTopics","icon":"$(fold)"},{"title":"Don't Summarize Identical Topics","category":"R Help Panel","command":"r.helpPanel.unsummarizeTopics","icon":"$(unfold)"},{"title":"Open help for selection","category":"R Help Panel","command":"r.helpPanel.openForSelection"},{"title":"Open help for path","category":"R Help Panel","command":"r.helpPanel.openForPath"},{"command":"r.liveShare.toggle","category":"R Live Share","title":"Toggle"},{"command":"r.liveShare.retry","title":"Retry connection to Live Share service","category":"R Live Share","icon":"$(refresh)"},{"title":"Toggle Style","category":"R Plot","command":"r.plot.toggleStyle","icon":"$(symbol-color)"},{"title":"Toggle Full Window Mode","category":"R Plot","command":"r.plot.toggleFullWindow","icon":"$(screen-full)"},{"title":"Toggle Preview Plot Layout","category":"R Plot","command":"r.plot.togglePreviewPlots","icon":"$(list-flat)"},{"title":"Export Plot","category":"R Plot","command":"r.plot.exportPlot","icon":"$(clone)"},{"title":"Close Plot","category":"R Plot","command":"r.plot.closePlot","icon":"$(trash)"},{"title":"Hide Plot","category":"R Plot","command":"r.plot.hidePlot","icon":"$(close)"},{"title":"Restore Plots","category":"R Plot","command":"r.plot.resetPlots","icon":"$(discard)"},{"title":"Previous Plot","category":"R Plot","command":"r.plot.prevPlot","enablement":"r.plot.canGoBack","icon":"$(chevron-left)"},{"title":"Next Plot","category":"R Plot","command":"r.plot.nextPlot","enablement":"r.plot.canGoForward","icon":"$(chevron-right)"},{"title":"First Plot","category":"R Plot","command":"r.plot.firstPlot","enablement":"r.plot.canGoBack","icon":"$(arrow-left)"},{"title":"Last Plot","category":"R Plot","command":"r.plot.lastPlot","enablement":"r.plot.canGoForward","icon":"$(arrow-right)"},{"title":"Zoom In","category":"R Plot","command":"r.plot.zoomIn","icon":"$(zoom-in)"},{"title":"Zoom Out","category":"R Plot","command":"r.plot.zoomOut","icon":"$(zoom-out)"},{"title":"Show Viewers","category":"R Plot","command":"r.plot.showViewers","icon":"$(versions)"},{"title":"Open Httpgd Url","category":"R Plot","command":"r.plot.openUrl","icon":"$(link)"},{"title":"Open in External Browser","category":"R Plot","command":"r.plot.openExternal","icon":"$(link-external)"}],"keybindings":[{"command":"r.runSelection","key":"Ctrl+enter","mac":"cmd+enter","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.runSelection","key":"Ctrl+enter","mac":"cmd+enter","when":"editorTextFocus && editorLangId == 'rmd'"},{"command":"r.runSelectionRetainCursor","key":"alt+enter","mac":"option+enter","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.runCurrentChunk","key":"Ctrl+shift+enter","mac":"cmd+shift+enter","when":"editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'r')"},{"command":"r.runAboveChunks","key":"Ctrl+alt+p","mac":"cmd+alt+p","when":"editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'r')"},{"command":"r.runSource","key":"shift+Ctrl+s","mac":"shift+cmd+s","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.knitRmd","key":"shift+Ctrl+k","mac":"shift+cmd+k","when":"editorTextFocus && editorLangId == 'rmd'"},{"command":"r.runSourcewithEcho","key":"shift+Ctrl+enter","mac":"shift+cmd+enter","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.runFromBeginningToLine","key":"Ctrl+alt+b","mac":"cmd+alt+b","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.runFromLineToEnd","key":"Ctrl+alt+e","mac":"cmd+alt+e","when":"editorTextFocus && editorLangId == 'r'"},{"command":"r.rmarkdown.showPreviewToSide","key":"Ctrl+k v","mac":"cmd+k v","when":"editorTextFocus && editorLangId == 'rmd'"},{"command":"r.rmarkdown.showPreview","key":"Ctrl+shift+v","mac":"cmd+shift+v","when":"editorTextFocus && editorLangId == 'rmd'"}],"menus":{"commandPalette":[{"command":"r.workspaceViewer.view","when":"false"},{"command":"r.workspaceViewer.remove","when":"false"},{"command":"r.workspaceViewer.package.showQuickPick","when":"false"},{"command":"r.helpPanel.back","when":"false"},{"command":"r.helpPanel.forward","when":"false"},{"command":"r.helpPanel.openExternal","when":"false"},{"command":"r.helpPanel.searchPackage","when":"false"},{"command":"r.helpPanel.openInNewPanel","when":"false"},{"command":"r.helpPanel.clearCache","when":"false"},{"command":"r.helpPanel.filterPackages","when":"false"},{"command":"r.helpPanel.removeFromFavorites","when":"false"},{"command":"r.helpPanel.addToFavorites","when":"false"},{"command":"r.helpPanel.showAllPackages","when":"false"},{"command":"r.helpPanel.showOnlyFavorites","when":"false"},{"command":"r.helpPanel.removePackage","when":"false"},{"command":"r.helpPanel.updateInstalledPackages","when":"false"},{"command":"r.helpPanel.updatePackage","when":"false"},{"command":"r.helpPanel.installPackages","when":"false"},{"command":"r.helpPanel.showQuickPick","when":"false"},{"command":"r.helpPanel.summarizeTopics","when":"false"},{"command":"r.helpPanel.unsummarizeTopics","when":"false"},{"command":"r.helpPanel.openForPath","when":"false"},{"command":"r.liveShare.toggle","when":"false"}],"editor/title/run":[{"when":"editorLangId == r","command":"r.runSource"},{"when":"editorLangId == rmd && editorFocus","command":"r.knitRmd","group":"navigation"}],"editor/title":[{"command":"r.rmarkdown.preview.openExternal","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active","group":"navigation@1"},{"command":"r.rmarkdown.preview.showSource","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active","group":"navigation@2"},{"command":"r.rmarkdown.preview.toggleStyle","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active","group":"navigation@3"},{"command":"r.rmarkdown.preview.refresh","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active","group":"navigation@4"},{"command":"r.rmarkdown.preview.enableAutoRefresh","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active && !r.rmarkdown.preview.autoRefresh","group":"navigation@5"},{"command":"r.rmarkdown.preview.disableAutoRefresh","when":"resourceScheme =~ /webview/ && r.rmarkdown.preview.active && r.rmarkdown.preview.autoRefresh","group":"navigation@5"},{"command":"r.browser.refresh","when":"resourceScheme =~ /webview/ && r.browser.active","group":"navigation"},{"command":"r.browser.openExternal","when":"resourceScheme =~ /webview/ && r.browser.active","group":"navigation"},{"command":"editor.action.webvieweditor.showFind","when":"resourceScheme =~ /webview/ && r.browser.active","group":"navigation"},{"command":"editor.action.webvieweditor.showFind","when":"resourceScheme =~ /webview/ && r.helpPanel.active","group":"navigation"},{"command":"r.helpPanel.back","when":"resourceScheme =~ /webview/ && r.helpPanel.active","group":"navigation"},{"command":"r.helpPanel.forward","when":"resourceScheme =~ /webview/ && r.helpPanel.active","group":"navigation"},{"command":"r.helpPanel.openExternal","when":"resourceScheme =~ /webview/ && r.helpPanel.active","group":"navigation"},{"group":"navigation","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.toggleStyle"},{"group":"navigation","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.toggleFullWindow"},{"group":"httpgd","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.togglePreviewPlots"},{"group":"httpgd","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.exportPlot"},{"group":"navigation@01","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.prevPlot","alt":"r.plot.firstPlot"},{"group":"navigation@02","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.nextPlot","alt":"r.plot.lastPlot"},{"group":"navigation@03","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.hidePlot","alt":"r.plot.closePlot"},{"group":"navigation@04","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.resetPlots"},{"group":"navigation","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.zoomIn","alt":"r.plot.zoomOut"},{"group":"navigation","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.zoomOut","alt":"r.plot.zoomIn"},{"group":"navigation","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.openExternal"},{"group":"httpgd","when":"resourceScheme =~ /webview/ && r.plot.active","command":"r.plot.openUrl"},{"command":"r.rmarkdown.showPreviewToSide","alt":"r.rmarkdown.showPreview","when":"editorLangId == rmd && editorFocus","group":"navigation"},{"submenu":"r.knitCommands","when":"editorLangId == rmd && editorFocus","group":"@1"},{"command":"r.rmarkdown.setKnitDirectory","when":"editorLangId == rmd && editorFocus","group":"@1"}],"editor/context":[{"command":"r.helpPanel.openForSelection","when":"resourceLangId == r"},{"command":"r.helpPanel.openForSelection","when":"resourceLangId == rmd"}],"view/item/context":[{"command":"r.workspaceViewer.view","group":"inline","when":"view == workspaceViewer && viewItem == rootNode"},{"command":"r.workspaceViewer.remove","group":"inline","when":"view == workspaceViewer && viewItem == rootNode"},{"command":"r.helpPanel.searchPackage","group":"inline","when":"view == rHelpPages && viewItem =~ /_searchPackage_/"},{"command":"r.helpPanel.openInNewPanel","group":"inline","when":"view == rHelpPages && viewItem =~ /_openInNewPanel_/"},{"command":"r.helpPanel.clearCache","group":"inline","when":"view == rHelpPages && viewItem =~ /_clearCache_/"},{"command":"r.helpPanel.addToFavorites","group":"inline@9","when":"view == rHelpPages && viewItem =~ /_addToFavorites_/"},{"command":"r.helpPanel.removeFromFavorites","group":"inline@9","when":"view == rHelpPages && viewItem =~ /_removeFromFavorites_/"},{"command":"r.helpPanel.showOnlyFavorites","group":"inline@9","when":"view == rHelpPages && viewItem =~ /_showOnlyFavorites_/"},{"command":"r.helpPanel.showAllPackages","group":"inline@9","when":"view == rHelpPages && viewItem =~ /_showAllPackages_/"},{"command":"r.helpPanel.removePackage","group":"inline","when":"view == rHelpPages && viewItem =~ /_removePackage_/"},{"command":"r.helpPanel.updateInstalledPackages","group":"inline","when":"view == rHelpPages && viewItem =~ /_updateInstalledPackages_/"},{"command":"r.helpPanel.updatePackage","group":"inline","when":"view == rHelpPages && viewItem =~ /_updatePackage_/"},{"command":"r.helpPanel.installPackages","group":"inline@9","when":"view == rHelpPages && viewItem =~ /_installPackages_/"},{"command":"r.helpPanel.filterPackages","group":"inline","when":"view == rHelpPages && viewItem =~ /_filterPackages_/"},{"command":"r.helpPanel.showQuickPick","group":"inline","when":"view == rHelpPages && viewItem =~ /_QUICKPICK_/"},{"command":"r.helpPanel.unsummarizeTopics","group":"inline@8","when":"view == rHelpPages && viewItem =~ /_unsummarizeTopics_/"},{"command":"r.helpPanel.summarizeTopics","group":"inline@8","when":"view == rHelpPages && viewItem =~ /_summarizeTopics_/"},{"command":"r.liveShare.toggle","when":"view == rLiveShare"}],"view/title":[{"command":"r.workspaceViewer.load","group":"navigation@0","when":"r.WorkspaceViewer:show && view == workspaceViewer && !r.liveShare:isGuest"},{"command":"r.workspaceViewer.save","group":"navigation@1","when":"r.WorkspaceViewer:show && view == workspaceViewer && !r.liveShare:isGuest"},{"command":"r.workspaceViewer.clear","group":"navigation@2","when":"r.WorkspaceViewer:show && view == workspaceViewer"},{"command":"r.workspaceViewer.refreshEntry","group":"navigation@3","when":"r.WorkspaceViewer:show && view == workspaceViewer"},{"command":"r.helpPanel.showQuickPick","group":"navigation","when":"view == rHelpPages"},{"command":"r.liveShare.retry","group":"navigation@3","when":"view == rLiveShare && r.liveShare:aborted"}],"explorer/context":[{"command":"r.rmarkdown.showPreview","when":"resourceLangId == rmd","group":"navigation"}],"r.knitCommands":[{"command":"r.knitRmd"},{"command":"r.knitRmdToPdf"},{"command":"r.knitRmdToHtml"},{"command":"r.knitRmdToAll"}],"file/newFile":[{"group":"R","command":"r.rmarkdown.newFileDraft"},{"group":"R","command":"r.newFileDocument"}]},"submenus":[{"id":"r.knitCommands","label":"R: Knit","icon":"$(zap)"}],"configuration":{"type":"object","title":"R","properties":{"r.rpath.windows":{"type":"string","default":"","markdownDescription":"Path to an R executable to launch R background processes (Windows). Must be \"vanilla\" R, not radian etc.! Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rpath.mac":{"type":"string","default":"","markdownDescription":"Path to an R executable to launch R background processes (macOS). Must be \"vanilla\" R, not radian etc.! Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rpath.linux":{"type":"string","default":"","markdownDescription":"Path to an R executable to launch R background processes (Linux). Must be \"vanilla\" R, not radian etc.! Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rterm.windows":{"type":"string","default":"","markdownDescription":"R path for interactive terminals (Windows). Can also be radian etc. Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rterm.mac":{"type":"string","default":"","markdownDescription":"R path for interactive terminals (macOS). Can also be radian etc. Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rterm.linux":{"type":"string","default":"","markdownDescription":"R path for interactive terminals (Linux). Can also be radian etc. Some variables defined in <https://code.visualstudio.com/docs/editor/variables-reference> such as `${userHome}`, `${workspaceFolder}`, `${fileWorkspaceFolder}`, and `${fileDirname}` are supported."},"r.rterm.option":{"type":"array","default":["--no-save","--no-restore"],"description":"R command line options.","items":{"type":"string"}},"r.libPaths":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Additional library paths to launch R background processes (R languageserver, help server, etc.). These paths will be appended to `.libPaths()` on process startup. It could be useful for projects with [renv](https://rstudio.github.io/renv/index.html) enabled."},"r.useRenvLibPath":{"type":"boolean","default":false,"markdownDescription":"Use renv library paths to launch R background processes (R languageserver, help server, etc.)."},"r.lsp.enabled":{"type":"boolean","default":true,"description":"Enable the R language service to provide code analysis features (completion, signature, hover, diagnostics, definition, etc.)"},"r.lsp.args":{"type":"array","items":{"type":"string"},"default":[],"description":"The command line arguments to use when launching R Language Server."},"r.lsp.promptToInstall":{"type":"boolean","default":true,"description":"Prompt to install R Language Server if it is not installed."},"r.lsp.debug":{"type":"boolean","default":false,"description":"Debug R Language Server."},"r.lsp.diagnostics":{"type":"boolean","default":true,"description":"Enable diagnostics."},"r.lsp.lang":{"type":"string","default":"","markdownDescription":"Override default `LANG` environment variable."},"r.lsp.use_stdio":{"type":"boolean","default":false,"description":"Use STDIO connection instead of TCP. (Unix/macOS users only)"},"r.lsp.multiServer":{"type":"boolean","default":true,"markdownDescription":"Use multiple language servers for [multi-root workspaces](https://code.visualstudio.com/docs/editor/multi-root-workspaces). If disabled, only one language server will be used to handle all requests from all workspaces and files."},"r.rmarkdown.codeLensCommands":{"type":"array","items":{"type":"string","enum":["r.selectCurrentChunk","r.runCurrentChunk","r.runCurrentChunkAndMove","r.runAboveChunks","r.runCurrentAndBelowChunks","r.runBelowChunks","r.runAllChunks","r.runPreviousChunk","r.runNextChunk","r.goToPreviousChunk","r.goToNextChunk"]},"default":["r.runCurrentChunk","r.runAboveChunks"],"description":"Customize RMarkdown CodeLens, which are inline commands/buttons e.g. 'Run Chunk' shown on the first line of each code chunk. \nCustomize both the commands AND its orders (that is, CodeLens respect user-specified orders):"},"r.rmarkdown.enableCodeLens":{"type":"boolean","default":true,"markdownDescription":"Enable RMarkdown CodeLens, which are inline commands/buttons e.g. 'Run Chunk | Run Above' shown on the first line of each code chunk.\n\n- Click the buttons to run commands.\n- Hover on the buttons to show tooltips.\n- CodeLens commands are customizable via `#r.rmarkdown.codeLensCommands#` or settings.json `r.rmarkdown.codeLensCommands`"},"r.rmarkdown.chunkBackgroundColor":{"type":"string","default":"rgba(128, 128, 128, 0.1)","description":"RMarkdown chunk background color in RGBA or RGB value. Defaults to rgba(128, 128, 128, 0.1). Leave it empty to disable it (use default editor background color). Reload VS Code after changing settings.\n\nLearn how to set colors: https://www.w3schools.com/css/css_colors_rgb.asp.\n\nExamples for syntax rgba(<red>, <green>, <blue>, <alpha>):\nrgba(128, 128, 128, 0.1)\nrgba(128, 128, 128, 0.3)\nrgba(255, 165, 0, 0.1)\n\n"},"r.rmarkdown.preview.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Enable automatic refresh of R Markdown preview on file update."},"r.rmarkdown.preview.zoom":{"type":"number","default":1,"markdownDescription":"Controls the zoom of the R Markdown preview."},"r.rmarkdown.knit.useBackgroundProcess":{"type":"boolean","default":true,"markdownDescription":"Should knitting occur in a background process (*smart knitting*), or should it be done in the current R terminal (*manual knitting*)? \n\n*Smart knitting* includes additional features, such as custom knit function detection, R Markdown site detection, progress bars, and the setting knit directory."},"r.rmarkdown.knit.focusOutputChannel":{"type":"boolean","default":true,"markdownDescription":"Should the R Markdown output channel be focused when knitting?\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`."},"r.rmarkdown.knit.openOutputFile":{"type":"boolean","default":false,"markdownDescription":"Should the output file be opened automatically when using knit?\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`."},"r.rmarkdown.knit.command":{"type":"string","default":"rmarkdown::render","markdownDescription":"Command used to knit a Rmd file if not specified by the frontmatter."},"r.rmarkdown.knit.defaults.knitWorkingDirectory":{"type":"string","default":"document directory","enum":["document directory","workspace root"],"enumDescriptions":["Use the document's directory as the knit directory","Use the workspace root as the knit directory"],"markdownDescription":"What working directory should R Markdown chunks be evaluated in? Default knit behaviour is to use the document's directory as root.\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`.","additionalItems":false,"additionalProperties":false},"r.helpPanel.enableSyntaxHighlighting":{"type":"boolean","default":true,"description":"Enable syntax highlighting in the help panel."},"r.helpPanel.cacheIndexFiles":{"type":"string","enum":["None","Workspace","Global"],"description":"Whether/where to store parsed help indices between sessions.","enumDescriptions":["Do not store anything","Store on a per workspace basis","Store globally"],"default":"None"},"r.helpPanel.previewLocalPackages":{"type":"array","items":{"type":"string"},"default":["."],"markdownDescription":"Which local directories to try for local help pages previewer. Set to `[]` to disable."},"r.helpPanel.rpath":{"type":"string","default":"","markdownDescription":"DEPRECATED! Path to an R executable. Must be \"vanilla\" R, not radian etc.! Will be read from registry or path if not set.","markdownDeprecationMessage":"Will be deprecated. Use `#r.rpath.windows#`, `#r.rpath.mac#`, or `#r.rpath.linux#` instead.","deprecationMessage":"Will be deprecated. Use r.rpath.windows, r.rpath.mac, or r.rpath.linux instead."},"r.helpPanel.enableHoverLinks":{"type":"boolean","default":true,"markdownDescription":"Show links to matching help pages in hover"},"r.helpPanel.clickCodeExamples":{"type":"object","markdownDescription":"What happens when clicking code examples on help pages. Might require restarting to take effect.","default":{"Click":"Copy","Ctrl+Click":"Run","Shift+Click":"Ignore"},"properties":{"Click":{"type":"string","default":"Copy","enum":["Ignore","Copy","Run"],"enumDescriptions":["Do nothing","Copy the code to the clipboard","Run the code in the terminal"]},"Ctrl+Click":{"type":"string","default":"Run","enum":["Ignore","Copy","Run"],"enumDescriptions":["Do nothing","Copy the code to the clipboard","Run the code in the terminal"]},"Shift+Click":{"type":"string","default":"Ignore","enum":["Ignore","Copy","Run"],"enumDescriptions":["Do nothing","Copy the code to the clipboard","Run the code in the terminal"]}},"additionalProperties":false},"r.source.encoding":{"type":"string","default":"UTF-8","markdownDescription":"An optional encoding to pass to R when executing the file, i.e. `source(FILE, encoding=ENCODING)`."},"r.source.echo":{"type":"boolean","default":false,"markdownDescription":"Should the file be executed with echo option set to TRUE by default, i.e. `source(FILE, echo=TRUE)`?"},"r.source.focus":{"type":"string","default":"editor","enum":["editor","terminal","none"],"enumDescriptions":["Focus editor when sending code to terminal","Focus terminal when sending code to terminal","Do not show terminal when sending code to terminal"],"description":"What to show/focus after sending code to terminal."},"r.alwaysUseActiveTerminal":{"type":"boolean","default":false,"description":"Use active terminal for all commands, rather than creating a new R terminal."},"r.bracketedPaste":{"type":"boolean","default":false,"markdownDescription":"Use bracketed paste mode when sending code to terminal. Enable for [radian](https://github.com/randy3k/radian) console."},"r.removeLeadingComments":{"type":"boolean","default":false,"description":"Remove leading comments when sending code to terminal."},"r.sessionWatcher":{"type":"boolean","default":true,"description":"Enable R session watcher. Required for workspace viewer and most features to work with an R session. Restart required to take effect."},"r.session.useWebServer":{"type":"boolean","default":false,"markdownDescription":"Enable experimental use of web server in the R session to handle session requests from the extension. Changes the option `vsc.use_webserver` in R. Requires `#r.sessionWatcher#` to be set to `true`. Requires the `httpuv` R package."},"r.session.watchGlobalEnvironment":{"type":"boolean","default":true,"markdownDescription":"Watch the global environment to provide hover, autocompletions, and workspace viewer information. Changes the option `vsc.globalenv` in R. Requires `#r.sessionWatcher#` to be set to `true`."},"r.session.objectLengthLimit":{"type":"integer","default":2000,"markdownDescription":"The upper limit of object length to show object details in workspace viewer and provide session symbol completion. Decrease this value if you experience significant delay after executing R commands caused by large global objects with many elements. Changes the option `vsc.object_length_limit` in R. Requires `#r.sessionWatcher#` to be set to `true`."},"r.session.objectTimeout":{"type":"integer","default":50,"markdownDescription":"The maximum number of milliseconds to get information of a single object in the global environment. Decrease this value if you experience significant delay after executing R commands caused by large global objects with many elements. Changes the option `vsc.object_timeout` in R. Requires `#r.sessionWatcher#` to be set to `true`."},"r.session.levelOfObjectDetail":{"type":"string","markdownDescription":"How much of the object to show on hover, autocompletion, and in the workspace viewer? Changes the option `vsc.str.max.level` in R. Requires `#r.sessionWatcher#` to be set to `true`.","default":"Minimal","enum":["Minimal","Normal","Detailed"],"enumDescriptions":["Display literal values and object types only.","Display the top level of list content, data frame column values, and example values.","Display the top two levels of list content, data frame column values, and example values. This option may cause notable delay after each user input in the terminal."]},"r.session.emulateRStudioAPI":{"type":"boolean","default":true,"markdownDescription":"Emulate the RStudio API for addin support and other {rstudioapi} calls. Changes the option `vsc.rstudioapi` in R. Requires `#r.sessionWatcher#` to be set to `true`."},"r.session.data.rowLimit":{"type":"integer","default":0,"markdownDescription":"The maximum number of rows to be displayed in the data viewer. `0` means no limit. Changes the option `vsc.row_limit` in R. Requires `#r.sessionWatcher#` to be set to `true`."},"r.session.data.pageSize":{"type":"integer","default":500,"markdownDescription":"The maximum number of rows per page in the data viewer. `0` means to disable pagination."},"r.session.viewers.viewColumn":{"type":"object","markdownDescription":"Which view column should R-related webviews be displayed? Requires `#r.sessionWatcher#` to be set to `true`.","default":{"plot":"Two","browser":"Active","viewer":"Two","pageViewer":"Active","view":"Two","helpPanel":"Two"},"properties":{"plot":{"type":"string","description":"Which view column to show the plot file on graphics update? \n\nChanges the option 'vsc.plot' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display plots in editor group 2.","Display plots in the active editor.","Display plots beside the active editor.","Do not use the VSCode-R plot viewer."],"default":"Two"},"browser":{"type":"string","description":"Which view column to show the WebView triggered by browser (e.g. shiny apps)? \n\nChanges the option 'vsc.browser' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display browser in editor group 2.","Display browser in the active editor.","Display browser beside the active editor.","Do not use the VSCode-R browser."],"default":"Active"},"viewer":{"type":"string","description":"Which view column to show the WebView triggered by viewer (e.g. htmlwidgets)? \n\nChanges the option 'vsc.viewer' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display viewer in editor group 2.","Display viewer in the active editor.","Display viewer beside the active editor.","Do not use the VSCode-R viewer."],"default":"Two"},"pageViewer":{"type":"string","description":"Which view column to show the WebView triggered by the page viewer (e.g. profvis)? \n\nChanges the option 'vsc.page_viewer' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display page viewer in editor group 2.","Display page viewer in the active editor.","Display page viewer beside the active editor.","Do not use the VSCode-R page viewer."],"default":"Active"},"view":{"type":"string","description":"Which view column to show the WebView triggered by View()? \n\nChanges the option 'vsc.view' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display view output in editor group 2.","Display view output in the active editor.","Display view output beside the active editor.","Do not use the VSCode-R view command."],"default":"Two"},"helpPanel":{"type":"string","description":"Which view column to show the WebView triggered by the help panel? \n\nChanges the option 'vsc.help_panel' in R.","enum":["Two","Active","Beside","Disable"],"enumDescriptions":["Display help panel in editor group 2.","Display help panel in the active editor.","Display help panel beside the active editor.","Do not use the VSCode-R help panel."],"default":"Two"}},"additionalProperties":false},"r.rtermSendDelay":{"type":"integer","default":8,"markdownDescription":"Delay in milliseconds before sending each line to rterm. Requires `#r.bracketedPaste#` to be `false`."},"r.workspaceViewer.showObjectSize":{"type":"boolean","default":false,"markdownDescription":"Show object size when hovering over a workspace viewer item. Changes the option `vsc.show_object_size` in R."},"r.workspaceViewer.removeHiddenItems":{"type":"boolean","default":false,"description":"Remove hidden items when clearing workspace."},"r.workspaceViewer.clearPrompt":{"type":"boolean","default":true,"description":"Prompt the user for confirmation when clearing the workspace."},"r.liveShare.timeout":{"type":"integer","default":10000,"description":"Time in milliseconds before aborting attempt to connect to Live Share API."},"r.liveShare.defaults.commandForward":{"type":"boolean","default":false,"description":"Default boolean value for guest command forwarding."},"r.liveShare.defaults.shareWorkspace":{"type":"boolean","default":true,"description":"Default boolean value for sharing the R workspace with guests."},"r.liveShare.defaults.shareBrowser":{"type":"boolean","default":false,"description":"Default boolean value for automatically sharing R browser ports with guests."},"r.plot.devArgs":{"type":"object","markdownDescription":"The arguments for the png device to replay user graphics to show in VSCode. Requires `#r.plot.useHttpgd#` to be set to `false`. \n\nChanges the option `vsc.dev.args` in R.","default":{"width":800,"height":1200},"properties":{"width":{"type":"number","description":"Width of the graphic device.","default":480},"height":{"type":"number","description":"Height of the graphic device.","default":480},"units":{"type":"string","default":"px"},"pointsize":{"type":"number","default":12},"bg":{"type":"string","default":"white"}},"additionalProperties":false},"r.plot.useHttpgd":{"type":"boolean","default":false,"markdownDescription":"Use the httpgd-based plot viewer instead of the base VSCode-R plot viewer. Changes the option `vsc.use_httpgd` in R.\n\nRequires the `httpgd` R package version 1.2.0 or later."},"r.plot.defaults.colorTheme":{"type":"string","default":"original","enum":["vscode","original"],"markdownEnumDescriptions":["Match background and primary stroke color to the current color theme (Or apply custom CSS overwrites, if specified in `#r.plot.customStyleOverwrites#`)","Use original colors"],"markdownDescription":"Which color theme to use when launching the httpgd plot viewer."},"r.plot.defaults.plotPreviewLayout":{"type":"string","default":"multirow","enum":["multirow","scroll","hidden"],"enumDescriptions":["Show in multiple rows","Show scrollbar","Don't show preview plots"],"markdownDescription":"How to display plot previews if more than one row required."},"r.plot.defaults.fullWindowMode":{"type":"boolean","default":false,"markdownDescription":"Whether to use full window mode when launching the httpgd plot viewer."},"r.plot.timing.resizeInterval":{"type":"number","default":100,"markdownDescription":"Interval in ms to wait between plot resizes."},"r.plot.timing.refreshInterval":{"type":"number","default":10,"markdownDescription":"Interval in ms to wait between plot refreshs."},"r.plot.customStyleOverwrites":{"type":"string","default":"","markdownDescription":"Path to a custom CSS file to be used when `#r.plot.defaults.colorTheme#` is `vscode`. Replaces the default CSS overwrites!"}}},"configurationDefaults":{"[r]":{"editor.wordSeparators":"`~!@#$%^&*()-=+[{]}\\|;:'\",<>/"}},"taskDefinitions":[{"type":"R","required":["code"],"properties":{"code":{"type":"array","items":{"type":"string"},"default":["x <- 'Hello, World!'","print(x)"],"description":"R code to be executed"},"options":{"type":"array","items":{"type":"string"},"default":["--no-echo","--no-restore"],"description":"Command line options used to invoke R. (see R --help)"},"cwd":{"type":"string","default":"${workspaceRoot}","description":"The current working directory of the executed program or shell. If omitted, the current workspace root will be used."},"env":{"type":"object","additionalProperties":{"type":"string"},"default":{},"description":"The environment of the executed program or shell. If omitted, the current process environment will be used."}}}],"problemMatchers":[{"name":"testthat","owner":"R","severity":"error","fileLocation":["relative","${workspaceFolder}/tests/testthat"],"pattern":[{"regexp":"^[-─ ]*(Failure|Error)\\s\\((.*\\.[Rr]):(\\d+):?(\\d+)?\\):\\s(.*)","file":2,"line":3,"column":4,"message":5},{"regexp":"^(.*)$","message":1}]}]},"scripts":{"vscode:prepublish":"tsc -p ./html/help && tsc -p ./html/httpgd && webpack --mode production","compile":"tsc -p ./html/help && tsc -p ./html/httpgd && webpack --mode none","watch":"webpack --mode none --watch","watchHelp":"tsc -p ./html/help --watch","watchHttpgd":"tsc -p ./html/httpgd --watch","pretest":"tsc -p ./","test":"node ./out/test/runTest.js","lint":"eslint src --ext ts"},"devDependencies":{"@types/cheerio":"^0.22.29","@types/ejs":"^3.0.6","@types/express":"^4.17.12","@types/fs-extra":"^9.0.11","@types/glob":"^8.0.0","@types/js-yaml":"^4.0.2","@types/mocha":"^8.2.2","@types/node":"^18.17.1","@types/node-fetch":"^2.5.10","@types/sinon":"^10.0.13","@types/vscode":"^1.75.0","@types/winreg":"^1.2.31","@typescript-eslint/eslint-plugin":"^5.30.0","@typescript-eslint/parser":"^5.30.0","@vscode/test-electron":"^2.2.3","@types/highlight.js":"^10.1.0","copy-webpack-plugin":"^9.0.0","devreplay":"^1.9.31","eslint":"^7.28.0","eslint-plugin-jsdoc":"^35.1.3","mocha":"^9.1.0","sinon":"^15.0.1","ts-loader":"^9.3.1","typescript":"^4.7.2","webpack":"^5.76.0","webpack-cli":"^4.7.2"},"dependencies":{"ag-grid-community":"^31.3.2","cheerio":"1.0.0-rc.12","crypto":"^1.0.1","ejs":"^3.1.10","fs-extra":"^10.0.0","highlight.js":"^11.9.0","httpgd":"^0.1.6","jquery":"^3.7.1","jquery.json-viewer":"^1.5.0","js-yaml":"^4.1.0","node-fetch":"^2.6.7","vscode-languageclient":"^9.0.1","vsls":"^1.0.4753","winreg":"^1.2.4"}},"location":{"$mid":1,"path":"/home/omnia/.vscode-oss/extensions/reditorsupport.r-2.8.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"REditorSupport","metadata":{"id":"4dfff9f4-ff9b-47bb-b0d1-c54e18d8febb","publisherId":"e361ca93-f309-41ab-9a77-8a4a9c10c6d1","publisherDisplayName":"REditorSupport","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1717600158398,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"asvetliakov.vscode-neovim","uuid":"caf8995c-5426-4bf7-9d01-f7968ebd49bb"},"manifest":{"name":"vscode-neovim","displayName":"VSCode Neovim","description":"Vim mode for VSCode, powered by Neovim","icon":"images/icon.png","publisher":"asvetliakov","extensionKind":["ui","workspace"],"version":"1.15.2","repository":{"type":"git","url":"https://github.com/asvetliakov/vscode-neovim"},"bugs":{"url":"https://github.com/asvetliakov/vscode-neovim/issues","email":"devpieron@gmail.com"},"engines":{"vscode":"^1.87.0"},"keywords":["keybindings","vi","vim","neovim"],"categories":["Other","Keymaps"],"activationEvents":["onCommand:type","onStartupFinished"],"main":"./dist/extension.js","contributes":{"configuration":{"title":"Neovim","properties":{"vscode-neovim.neovimExecutablePaths.win32":{"type":"string","default":"nvim","title":"Neovim executable path on Windows","markdownDescription":"Path to Nvim executable if running VS Code on Windows. \n- Example: `C:\\tools\\neovim\\Neovim\\bin\\nvim.exe` (if you installed using Chocolatey)\n- If you want to use Windows Subsystem for Linux, enable the `useWSL` setting and set `neovimExecutablePaths.linux` instead"},"vscode-neovim.neovimExecutablePaths.darwin":{"type":"string","default":"nvim","title":"Neovim executable path on macOS","markdownDescription":"Path to Nvim executable if running VS Code on macOS."},"vscode-neovim.neovimExecutablePaths.linux":{"type":"string","default":"nvim","title":"Neovim executable path on Linux (and in WSL)","markdownDescription":"Path to Nvim executable if running VS Code on Linux or WSL. \n- Example: `/usr/bin/nvim`\n- If `useWSL` setting is checked, vscode-neovim will look for this path in default WSL distro."},"vscode-neovim.neovimInitVimPaths.win32":{"type":"string","default":"","title":"Custom init.vim path on Windows","markdownDescription":"Path to alternative `init.vim` file on Windows, equivalent to Nvim startup option `-u`. If `useWSL` is enabled, the value of the `neovimInitVimPaths.linux` setting will be used to find the init.vim file instead. You can also use `exists('g:vscode')` in your `init.vim` (or `vim.g.vscode` in `init.lua`) to check if Nvim is running in vscode."},"vscode-neovim.neovimInitVimPaths.darwin":{"type":"string","default":"","title":"Custom init.vim path on macOS","markdownDescription":"Path to alternative `init.vim` file on macOS, equivalent to Nvim startup option `-u`. You can also use `exists('g:vscode')` in your `init.vim` (or `vim.g.vscode` in `init.lua`) to check if Nvim is running in vscode."},"vscode-neovim.neovimInitVimPaths.linux":{"type":"string","default":"","title":"Custom init.vim path on Linux","markdownDescription":"Path to alternative `init.vim` file on Linux or default WSL distro, equivalent to Nvim startup option `-u`. If the `useWSL` setting is checked, this path will be used to find `init.vim` in Windows Subsystem for Linux. You can also use `exists('g:vscode')` in your `init.vim` (or `vim.g.vscode` in `init.lua`) to check if Nvim is running in vscode."},"vscode-neovim.afterInitConfig":{"type":"array","default":[],"items":{"type":"string"},"title":"After init config","markdownDescription":"Config to be sourced after init config. e.g. : `[\"echo 'hello'\", \"lua << EOF\", \"require'vscode'.notify('world')\", \"EOF\"]`"},"vscode-neovim.neovimClean":{"type":"boolean","default":false,"markdownDescription":"Equivalent to the startup option `--clean`."},"vscode-neovim.NVIM_APPNAME":{"type":"string","default":"","markdownDescription":"See `:help NVIM_APPNAME`."},"vscode-neovim.neovimWidth":{"type":"number","default":1000,"title":"Neovim width","description":"Neovim viewport width. Increase if you're working with long lines and have horizontal scroll problems. Larger values will affect neovim performance"},"vscode-neovim.neovimViewportHeightExtend":{"type":"number","default":1,"title":"Neovim viewport height extend","description":"How much to extend neovim viewport on each side beyond vscode editor size. Increase if you are not seeing decorations or highlights on the edges of the editor."},"vscode-neovim.ctrlKeysForNormalMode":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","/","]","right","left","up","down","backspace","delete"]},"default":["a","b","c","d","e","f","h","i","j","k","l","m","o","r","t","u","v","w","x","y","z","/","]","right","left","up","down","backspace","delete"],"description":"Enabled Ctrl keys in normal/visual/etc...(except insert) modes"},"vscode-neovim.ctrlKeysForInsertMode":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","/","]","right","left","up","down","backspace","delete"]},"default":["a","c","d","h","j","m","o","r","t","u","w"],"description":"Enabled Ctrl keys in insert mode"},"vscode-neovim.editorLangIdExclusions":{"type":"array","uniqueItems":true,"items":{"type":"string"},"default":[],"description":"Will disable all keyboard shortcuts when the current editorLangId is in the list"},"vscode-neovim.useWSL":{"type":"boolean","default":false,"markdownDescription":"Use neovim installed in [default WSL distro](https://learn.microsoft.com/en-us/windows/wsl/basic-commands#run-a-specific-linux-distribution-from-powershell-or-cmd). If you enable this setting, specify the path to the neovim executable installed in WSL `neovimExecutablePaths.linux` setting. "},"vscode-neovim.wslDistribution":{"type":"string","default":"","markdownDescription":"Specify the WSL distribution to run neovim in. Use default WSL distro if empty. Use wsl.exe --list to see available distros"},"vscode-neovim.revealCursorScrollLine":{"type":"boolean","default":false,"markdownDescription":"If 'true' reveals the cursor when scrolling by line and if it is outside view port"},"vscode-neovim.logPath":{"type":"string","default":"","description":"Log file path"},"vscode-neovim.logOutputToConsole":{"type":"boolean","default":false,"markdownDescription":"Log to vscode developer console (not output channel!). \n- Hint: Run the `Developer: Toggle Developer Tools` command to see the console."},"vscode-neovim.highlightGroups.highlights":{"type":"object","title":"Highlight Groups Configuration","description":"Define colors for various VIM highlight groups. Values are text decoration properties object","additionalProperties":{"type":"object","properties":{"backgroundColor":{"type":"string","description":"CSS styling property that will be applied to the decoration attachment"},"color":{"type":"string","description":"CSS styling property that will be applied to the decoration attachment"},"border":{"type":"string","description":"CSS styling property that will be applied to the decoration attachment"},"borderColor":{"type":"string","description":"CSS styling property that will be applied to the decoration attachment"},"textDecoration":{"type":"string","description":"CSS styling property that will be applied to the decoration attachment"}}},"default":{"IncSearch":{"backgroundColor":"theme.editor.findMatchBackground"},"CurSearch":{"backgroundColor":"theme.editor.findMatchBackground"},"Search":{"backgroundColor":"theme.editor.findMatchHighlightBackground"},"Substitute":{"backgroundColor":"theme.editor.foreground","color":"theme.editor.background"}}},"vscode-neovim.normalSelectionDebounceTime":{"type":"integer","minimum":20,"maximum":100,"default":50,"description":"Debounce time used to synchronize selection from VSCode to Nvim, typically referring to cursor movement"},"vscode-neovim.mouseSelectionDebounceTime":{"default":100,"enum":[0,50,100,150,200],"enumDescriptions":["Disable mouse selection sync","50ms","100ms","150ms","200ms"],"description":"Debounce time for synchronizing mouse selection. Set to 0 to disable synchronization"},"vscode-neovim.statusLineSeparator":{"type":"string","default":"|","description":"Separator used by statusline"},"vscode-neovim.compositeTimeout":{"type":"number","default":300,"minimum":100,"maximum":1000,"description":"Timeout in milliseconds to wait for the next key in a composite key sequence"},"vscode-neovim.compositeKeys":{"type":"object","default":{},"examples":[{"jj":{"command":"vscode-neovim.escape","args":[]}},{"jk":{"command":"vscode-neovim.lua","args":["vim.api.nvim_input('<ESC>') require('vscode').action('workbench.action.files.save')"]}}],"patternProperties":{"^[ -~]{2}$":{"type":"object","properties":{"command":{"type":"string"},"args":{"type":"array"}},"required":["command"]}},"description":"Composite key bindings"}}},"commands":[{"command":"vscode-neovim.restart","title":"Neovim: Restart Extension"},{"command":"vscode-neovim.stop","title":"Neovim: Stop Extension"},{"command":"vscode-neovim.lua","title":"Neovim: Execute lua code"},{"command":"vscode-neovim.send","title":"Neovim: Send key to neovim, syncing if in insert mode"},{"command":"vscode-neovim.send-blocking","title":"Neovim: Send multiple keys to neovim, used for insert mode paste"},{"command":"vscode-neovim.escape","title":"Neovim: Send escape key to neovim, or other keys that will exit insert mode"},{"command":"vscode-neovim.commit-cmdline","title":"Neovim: Accept cmdline"},{"command":"vscode-neovim.complete-selection-cmdline","title":"Neovim: Complete selection cmdline"},{"command":"vscode-neovim.send-cmdline","title":"Neovim: Send key in cmdline"},{"command":"vscode-neovim.ctrl-b","title":"Neovim: ctrl-b"},{"command":"vscode-neovim.ctrl-d","title":"Neovim: ctrl-d"},{"command":"vscode-neovim.ctrl-e","title":"Neovim: ctrl-e"},{"command":"vscode-neovim.ctrl-f","title":"Neovim: ctrl-f"},{"command":"vscode-neovim.ctrl-u","title":"Neovim: ctrl-u"},{"command":"vscode-neovim.ctrl-y","title":"Neovim: ctrl-y"}],"keybindings":[{"command":"vscode-neovim.escape","key":"ctrl+[","when":"editorTextFocus && neovim.init && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.escape","key":"ctrl+c","when":"editorTextFocus && neovim.init && editorLangId not in neovim.editorLangIdExclusions && neovim.mode == normal && neovim.ctrlKeysNormal.c && !markersNavigationVisible && !parameterHintsVisible && !inReferenceSearchEditor && !referenceSearchVisible && !dirtyDiffVisible && !notebookCellFocused && !findWidgetVisible && !notificationCenterVisible"},{"command":"vscode-neovim.escape","key":"ctrl+c","when":"editorTextFocus && neovim.init && editorLangId not in neovim.editorLangIdExclusions && neovim.mode != normal && neovim.ctrlKeysInsert.c"},{"command":"vscode-neovim.escape","key":"Escape","when":"editorTextFocus && neovim.init && editorLangId not in neovim.editorLangIdExclusions && neovim.mode == normal && !markersNavigationVisible && !parameterHintsVisible && !inReferenceSearchEditor && !referenceSearchVisible && !dirtyDiffVisible && !notebookCellFocused && !findWidgetVisible && !notificationCenterVisible"},{"command":"vscode-neovim.escape","key":"Escape","when":"editorTextFocus && neovim.init && editorLangId not in neovim.editorLangIdExclusions && neovim.mode != normal"},{"command":"vscode-neovim.send","key":"backspace","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<BS>"},{"command":"vscode-neovim.send","key":"shift+backspace","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-BS>"},{"command":"vscode-neovim.send","key":"delete","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<Del>"},{"command":"vscode-neovim.send","key":"shift+delete","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-Del>"},{"command":"vscode-neovim.send","key":"tab","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<tab>"},{"command":"vscode-neovim.send","key":"shift+tab","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-tab>"},{"command":"vscode-neovim.send","key":"down","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<down>"},{"command":"vscode-neovim.send","key":"up","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<up>"},{"command":"vscode-neovim.send","key":"left","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<left>"},{"command":"vscode-neovim.send","key":"right","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<right>"},{"command":"vscode-neovim.send","key":"shift+down","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-down>"},{"command":"vscode-neovim.send","key":"shift+up","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-up>"},{"command":"vscode-neovim.send","key":"shift+left","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-left>"},{"command":"vscode-neovim.send","key":"shift+right","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<S-right>"},{"command":"vscode-neovim.send","key":"home","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<home>"},{"command":"vscode-neovim.send","key":"end","when":"neovim.init && (editorTextFocus && neovim.mode != insert && editorLangId not in neovim.editorLangIdExclusions || neovim.recording)","args":"<end>"},{"command":"vscode-neovim.send","key":"ctrl+a","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.a && editorLangId not in neovim.editorLangIdExclusions","args":"<C-a>"},{"command":"vscode-neovim.ctrl-b","key":"ctrl+b","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.b && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.ctrl-d","key":"ctrl+d","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.d && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.ctrl-e","key":"ctrl+e","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.e && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.ctrl-f","key":"ctrl+f","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.f && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.send","key":"ctrl+g","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.g && editorLangId not in neovim.editorLangIdExclusions","args":"<C-g>"},{"command":"vscode-neovim.send","key":"ctrl+h","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.h && editorLangId not in neovim.editorLangIdExclusions","args":"<C-h>"},{"command":"vscode-neovim.send","key":"ctrl+i","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.i && editorLangId not in neovim.editorLangIdExclusions","args":"<C-i>"},{"command":"vscode-neovim.send","key":"ctrl+j","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.j && editorLangId not in neovim.editorLangIdExclusions","args":"<C-j>"},{"command":"vscode-neovim.send","key":"ctrl+k","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.k && editorLangId not in neovim.editorLangIdExclusions","args":"<C-k>"},{"command":"vscode-neovim.send","key":"ctrl+l","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.l && editorLangId not in neovim.editorLangIdExclusions","args":"<C-l>"},{"command":"vscode-neovim.send","key":"ctrl+m","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.m && editorLangId not in neovim.editorLangIdExclusions","args":"<C-m>"},{"command":"vscode-neovim.send","key":"ctrl+n","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.n && editorLangId not in neovim.editorLangIdExclusions","args":"<C-n>"},{"command":"vscode-neovim.send","key":"ctrl+o","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.o && editorLangId not in neovim.editorLangIdExclusions","args":"<C-o>"},{"command":"vscode-neovim.send","key":"ctrl+p","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.p && editorLangId not in neovim.editorLangIdExclusions","args":"<C-p>"},{"command":"vscode-neovim.send","key":"ctrl+q","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.q && editorLangId not in neovim.editorLangIdExclusions","args":"<C-q>"},{"command":"vscode-neovim.send","key":"ctrl+r","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.r && editorLangId not in neovim.editorLangIdExclusions","args":"<C-r>"},{"command":"vscode-neovim.send","key":"ctrl+s","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.s && editorLangId not in neovim.editorLangIdExclusions","args":"<C-s>"},{"command":"vscode-neovim.send","key":"ctrl+t","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.t && editorLangId not in neovim.editorLangIdExclusions","args":"<C-t>"},{"command":"vscode-neovim.ctrl-u","key":"ctrl+u","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.u && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.send","key":"ctrl+v","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.v && editorLangId not in neovim.editorLangIdExclusions","args":"<C-v>"},{"command":"vscode-neovim.send","key":"ctrl+w","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.w && editorLangId not in neovim.editorLangIdExclusions","args":"<C-w>"},{"command":"vscode-neovim.send","key":"ctrl+x","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.x && editorLangId not in neovim.editorLangIdExclusions","args":"<C-x>"},{"command":"vscode-neovim.ctrl-y","key":"ctrl+y","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.y && editorLangId not in neovim.editorLangIdExclusions"},{"command":"vscode-neovim.send","key":"ctrl+z","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.z && editorLangId not in neovim.editorLangIdExclusions","args":"<C-z>"},{"command":"vscode-neovim.send","key":"ctrl+/","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal./ && editorLangId not in neovim.editorLangIdExclusions","args":"<C-/>"},{"command":"vscode-neovim.send","key":"ctrl+]","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.] && editorLangId not in neovim.editorLangIdExclusions","args":"<C-]>"},{"command":"vscode-neovim.send","key":"ctrl+right","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.right && editorLangId not in neovim.editorLangIdExclusions","args":"<C-right>"},{"command":"vscode-neovim.send","key":"ctrl+left","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.left && editorLangId not in neovim.editorLangIdExclusions","args":"<C-left>"},{"command":"vscode-neovim.send","key":"ctrl+up","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.up && editorLangId not in neovim.editorLangIdExclusions","args":"<C-up>"},{"command":"vscode-neovim.send","key":"ctrl+down","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.down && editorLangId not in neovim.editorLangIdExclusions","args":"<C-down>"},{"command":"vscode-neovim.send","key":"ctrl+backspace","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.backspace && editorLangId not in neovim.editorLangIdExclusions","args":"<C-BS>"},{"command":"vscode-neovim.send","key":"ctrl+delete","when":"editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal.delete && editorLangId not in neovim.editorLangIdExclusions","args":"<C-Del>"},{"command":"vscode-neovim.send","key":"ctrl+a","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.a && editorLangId not in neovim.editorLangIdExclusions","args":"<C-a>"},{"command":"vscode-neovim.send","key":"ctrl+b","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.b && editorLangId not in neovim.editorLangIdExclusions","args":"<C-b>"},{"command":"vscode-neovim.send","key":"ctrl+d","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.d && editorLangId not in neovim.editorLangIdExclusions","args":"<C-d>"},{"command":"vscode-neovim.send","key":"ctrl+e","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.e && editorLangId not in neovim.editorLangIdExclusions","args":"<C-e>"},{"command":"vscode-neovim.send","key":"ctrl+f","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.f && editorLangId not in neovim.editorLangIdExclusions","args":"<C-f>"},{"command":"vscode-neovim.send","key":"ctrl+g","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.g && editorLangId not in neovim.editorLangIdExclusions","args":"<C-g>"},{"command":"vscode-neovim.send","key":"ctrl+h","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.h && editorLangId not in neovim.editorLangIdExclusions","args":"<C-h>"},{"command":"vscode-neovim.send","key":"ctrl+i","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.i && editorLangId not in neovim.editorLangIdExclusions","args":"<C-i>"},{"command":"vscode-neovim.send","key":"ctrl+j","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.j && editorLangId not in neovim.editorLangIdExclusions","args":"<C-j>"},{"command":"vscode-neovim.send","key":"ctrl+k","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.k && editorLangId not in neovim.editorLangIdExclusions","args":"<C-k>"},{"command":"vscode-neovim.send","key":"ctrl+l","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.l && editorLangId not in neovim.editorLangIdExclusions","args":"<C-l>"},{"command":"vscode-neovim.send","key":"ctrl+m","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.m && editorLangId not in neovim.editorLangIdExclusions","args":"<C-m>"},{"command":"vscode-neovim.send","key":"ctrl+n","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.n && editorLangId not in neovim.editorLangIdExclusions","args":"<C-n>"},{"command":"vscode-neovim.escape","key":"ctrl+o","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.o && editorLangId not in neovim.editorLangIdExclusions","args":"<C-o>"},{"command":"vscode-neovim.send","key":"ctrl+p","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.p && editorLangId not in neovim.editorLangIdExclusions","args":"<C-p>"},{"command":"vscode-neovim.send","key":"ctrl+q","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.q && editorLangId not in neovim.editorLangIdExclusions","args":"<C-q>"},{"command":"vscode-neovim.send-blocking","key":"ctrl+r","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.r && editorLangId not in neovim.editorLangIdExclusions","args":"<C-r>"},{"command":"vscode-neovim.send","key":"ctrl+s","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.s && editorLangId not in neovim.editorLangIdExclusions","args":"<C-s>"},{"command":"vscode-neovim.send","key":"ctrl+t","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.t && editorLangId not in neovim.editorLangIdExclusions","args":"<C-t>"},{"command":"vscode-neovim.send","key":"ctrl+u","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.u && editorLangId not in neovim.editorLangIdExclusions","args":"<C-u>"},{"command":"vscode-neovim.send","key":"ctrl+v","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.v && editorLangId not in neovim.editorLangIdExclusions","args":"<C-v>"},{"command":"vscode-neovim.send","key":"ctrl+w","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.w && editorLangId not in neovim.editorLangIdExclusions","args":"<C-w>"},{"command":"vscode-neovim.send","key":"ctrl+x","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.x && editorLangId not in neovim.editorLangIdExclusions","args":"<C-x>"},{"command":"vscode-neovim.send","key":"ctrl+y","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.y && editorLangId not in neovim.editorLangIdExclusions","args":"<C-y>"},{"command":"vscode-neovim.send","key":"ctrl+z","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.z && editorLangId not in neovim.editorLangIdExclusions","args":"<C-z>"},{"command":"vscode-neovim.send","key":"ctrl+/","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert./ && editorLangId not in neovim.editorLangIdExclusions","args":"<C-/>"},{"command":"vscode-neovim.send","key":"ctrl+]","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.] && editorLangId not in neovim.editorLangIdExclusions","args":"<C-]>"},{"command":"vscode-neovim.send","key":"ctrl+right","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.right && editorLangId not in neovim.editorLangIdExclusions","args":"<C-right>"},{"command":"vscode-neovim.send","key":"ctrl+left","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.left && editorLangId not in neovim.editorLangIdExclusions","args":"<C-left>"},{"command":"vscode-neovim.send","key":"ctrl+up","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.up && editorLangId not in neovim.editorLangIdExclusions","args":"<C-up>"},{"command":"vscode-neovim.send","key":"ctrl+down","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.down && editorLangId not in neovim.editorLangIdExclusions","args":"<C-down>"},{"command":"vscode-neovim.send","key":"ctrl+backspace","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.backspace && editorLangId not in neovim.editorLangIdExclusions","args":"<C-BS>"},{"command":"vscode-neovim.send","key":"ctrl+delete","when":"editorTextFocus && neovim.init && neovim.mode == insert && neovim.ctrlKeysInsert.delete && editorLangId not in neovim.editorLangIdExclusions","args":"<C-Del>"},{"command":"vscode-neovim.send-cmdline","key":"tab","when":"neovim.init && neovim.mode == cmdline","args":"<tab>"},{"command":"vscode-neovim.send-cmdline","key":"shift+tab","when":"neovim.init && neovim.mode == cmdline","args":"<S-tab>"},{"command":"vscode-neovim.send-cmdline","key":"down","when":"neovim.init && neovim.mode == cmdline","args":"<down>"},{"command":"vscode-neovim.send-cmdline","key":"up","when":"neovim.init && neovim.mode == cmdline","args":"<up>"},{"command":"vscode-neovim.send-cmdline","key":"shift+down","when":"neovim.init && neovim.mode == cmdline","args":"<S-down>"},{"command":"vscode-neovim.send-cmdline","key":"shift+up","when":"neovim.init && neovim.mode == cmdline","args":"<S-up>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+h","when":"neovim.init && neovim.mode == cmdline","args":"<C-h>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+w","when":"neovim.init && neovim.mode == cmdline","args":"<C-w>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+u","when":"neovim.init && neovim.mode == cmdline","args":"<C-u>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+n","when":"neovim.init && neovim.mode == cmdline","args":"<C-n>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+p","when":"neovim.init && neovim.mode == cmdline","args":"<C-p>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+l","when":"neovim.init && neovim.mode == cmdline","args":"<C-l>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+g","when":"neovim.init && neovim.mode == cmdline","args":"<C-g>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+t","when":"neovim.init && neovim.mode == cmdline","args":"<C-t>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+m","when":"neovim.init && neovim.mode == cmdline","args":"<C-m>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+j","when":"neovim.init && neovim.mode == cmdline","args":"<C-j>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+up","when":"neovim.init && neovim.mode == cmdline","args":"<C-up>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+down","when":"neovim.init && neovim.mode == cmdline","args":"<C-down>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 0","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>0"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 1","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>1"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 2","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>2"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 3","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>3"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 4","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>4"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 5","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>5"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 6","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>6"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 7","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>7"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 8","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>8"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r 9","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>9"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+0","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>)"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+1","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>!"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+2","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>@"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+3","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>#"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+4","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>$"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+5","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>%"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+6","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>^"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+7","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>&"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+8","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>*"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+9","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>("},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+'","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>\""},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift++","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>="},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+-","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>_"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+=","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>+"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+;","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>:"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+,","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+.","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+/","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>?"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+`","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>~"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+[","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>{"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r shift+]","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>}"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+a","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-a>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+b","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-b>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+c","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-c>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+d","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-d>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+e","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-e>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+f","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-f>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+g","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-g>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+h","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-h>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+i","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-i>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+j","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-j>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+k","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-k>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+l","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-l>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+m","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-m>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+n","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-n>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+o","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-o>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+p","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-p>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+q","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-q>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+r","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-r>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+s","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-s>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+t","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-t>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+u","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-u>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+v","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-v>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+w","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-w>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+x","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-x>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+y","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-y>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+z","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-z>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r ctrl+]","when":"neovim.init && neovim.mode == cmdline","args":"<C-r><C-]>"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r /","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>/"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r -","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>-"},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r .","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>."},{"command":"vscode-neovim.send-cmdline","key":"ctrl+r =","when":"neovim.init && neovim.mode == cmdline","args":"<C-r>="},{"command":"vscode-neovim.send-cmdline","key":"ctrl+\\ e","when":"neovim.init && neovim.mode == cmdline","args":"<C-\\>e"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"enter","command":"list.select","when":"listFocus && !inputFocus && !notebookCellListFocused"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"shift+g","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"/","command":"list.find","when":"listFocus && listSupportsFind && !inputFocus"},{"key":"enter","command":"list.closeFind","when":"listFocus && treeFindOpen && inputFocus"},{"key":"r","command":"renameFile","when":"explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"},{"key":"d","command":"deleteFile","when":"explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"},{"key":"y","command":"filesExplorer.copy","when":"explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"},{"key":"x","command":"filesExplorer.cut","when":"explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"},{"key":"p","command":"filesExplorer.paste","when":"explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"},{"key":"v","command":"explorer.openToSide","when":"explorerViewletFocus && explorerViewletVisible && !inputFocus"},{"key":"a","command":"explorer.newFile","when":"filesExplorerFocus && !inputFocus"},{"key":"shift+a","command":"explorer.newFolder","when":"filesExplorerFocus && !inputFocus"},{"key":"shift+r","command":"workbench.files.action.refreshFilesExplorer","when":"filesExplorerFocus && !inputFocus"},{"key":"z o","command":"list.expand","when":"!editorTextFocus && !inputFocus"},{"key":"z shift+o","command":"list.expand","when":"!editorTextFocus && !inputFocus"},{"key":"z c","command":"list.collapse","when":"!editorTextFocus && !inputFocus"},{"key":"z shift+c","command":"list.collapseAllToFocus","when":"!editorTextFocus && !inputFocus"},{"key":"z a","command":"list.toggleExpand","when":"!editorTextFocus && !inputFocus"},{"key":"z shift+a","command":"list.toggleExpand","when":"!editorTextFocus && !inputFocus"},{"key":"z m","command":"list.collapseAll","when":"!editorTextFocus && !inputFocus"},{"key":"z shift+m","command":"list.collapseAll","when":"!editorTextFocus && !inputFocus"},{"key":"tab","command":"togglePeekWidgetFocus","when":"inReferenceSearchEditor && neovim.mode == normal || referenceSearchVisible"},{"key":"ctrl+n","command":"list.focusDown","when":"inReferenceSearchEditor && neovim.mode == normal"},{"key":"ctrl+p","command":"list.focusUp","when":"inReferenceSearchEditor && neovim.mode == normal"},{"command":"list.focusDown","key":"ctrl+n","when":"listFocus && !inputFocus"},{"command":"list.focusUp","key":"ctrl+p","when":"listFocus && !inputFocus"},{"command":"showNextParameterHint","key":"ctrl+n","when":"editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"},{"command":"showPrevParameterHint","key":"ctrl+p","when":"editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"},{"key":"ctrl+n","command":"selectNextSuggestion","when":"textInputFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"},{"key":"ctrl+p","command":"selectPrevSuggestion","when":"textInputFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"},{"command":"workbench.action.quickOpenSelectNext","key":"ctrl+n","when":"inQuickOpen && neovim.mode != cmdline"},{"command":"workbench.action.quickOpenSelectPrevious","key":"ctrl+p","when":"inQuickOpen && neovim.mode != cmdline"},{"key":"ctrl+n","command":"selectNextCodeAction","when":"codeActionMenuVisible"},{"key":"ctrl+p","command":"selectPrevCodeAction","when":"codeActionMenuVisible"},{"key":"ctrl+w q","command":"workbench.action.closeActiveEditor","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus && !filesExplorerFocus && !searchViewletFocus"},{"key":"ctrl+Escape","command":"workbench.action.focusActiveEditorGroup","when":"terminalFocus"},{"command":"editor.action.showHover","key":"shift+k","when":"neovim.init && neovim.mode == normal && editorTextFocus && editorHoverVisible"},{"command":"editor.action.pageDownHover","key":"ctrl+f","when":"editorHoverFocused"},{"command":"editor.action.pageUpHover","key":"ctrl+b","when":"editorHoverFocused"},{"command":"editor.action.pageDownHover","key":"ctrl+d","when":"editorHoverFocused"},{"command":"editor.action.pageUpHover","key":"ctrl+u","when":"editorHoverFocused"},{"command":"editor.action.scrollDownHover","key":"j","when":"editorHoverFocused"},{"command":"editor.action.scrollUpHover","key":"k","when":"editorHoverFocused"},{"command":"editor.action.scrollLeftHover","key":"h","when":"editorHoverFocused"},{"command":"editor.action.scrollRightHover","key":"l","when":"editorHoverFocused"},{"command":"editor.action.goToTopHover","key":"g g","when":"editorHoverFocused"},{"command":"editor.action.goToBottomHover","key":"shift+g","when":"editorHoverFocused"},{"command":"-workbench.action.switchWindow","key":"ctrl+w"},{"command":"workbench.action.focusNextGroup","key":"ctrl+w ctrl+w","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus && !(filesExplorerFocus || inSearchEditor || searchViewletFocus || replaceInputBoxFocus)"},{"command":"workbench.action.navigateUp","key":"ctrl+w up","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateUp","key":"ctrl+w k","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateDown","key":"ctrl+w down","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateDown","key":"ctrl+w j","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateLeft","key":"ctrl+w left","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateLeft","key":"ctrl+w h","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateRight","key":"ctrl+w right","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.navigateRight","key":"ctrl+w l","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.evenEditorWidths","key":"ctrl+w =","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.toggleEditorWidths","key":"ctrl+w _","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.increaseViewWidth","key":"ctrl+w >","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.decreaseViewWidth","key":"ctrl+w <","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.increaseViewHeight","key":"ctrl+w +","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.decreaseViewHeight","key":"ctrl+w -","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.splitEditorDown","key":"ctrl+w s","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"workbench.action.splitEditorRight","key":"ctrl+w v","when":"!editorTextFocus && neovim.mode != 'cmdline' && !terminalFocus"},{"command":"vscode-neovim.send","key":"a","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"a"},{"command":"vscode-neovim.send","key":"b","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"b"},{"command":"vscode-neovim.send","key":"c","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"c"},{"command":"vscode-neovim.send","key":"d","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"d"},{"command":"vscode-neovim.send","key":"e","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"e"},{"command":"vscode-neovim.send","key":"f","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"f"},{"command":"vscode-neovim.send","key":"g","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"g"},{"command":"vscode-neovim.send","key":"h","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"h"},{"command":"vscode-neovim.send","key":"i","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"i"},{"command":"vscode-neovim.send","key":"j","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"j"},{"command":"vscode-neovim.send","key":"k","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"k"},{"command":"vscode-neovim.send","key":"l","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"l"},{"command":"vscode-neovim.send","key":"m","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"m"},{"command":"vscode-neovim.send","key":"n","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"n"},{"command":"vscode-neovim.send","key":"o","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"o"},{"command":"vscode-neovim.send","key":"p","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"p"},{"command":"vscode-neovim.send","key":"q","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"q"},{"command":"vscode-neovim.send","key":"r","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"r"},{"command":"vscode-neovim.send","key":"s","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"s"},{"command":"vscode-neovim.send","key":"t","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"t"},{"command":"vscode-neovim.send","key":"u","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"u"},{"command":"vscode-neovim.send","key":"v","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"v"},{"command":"vscode-neovim.send","key":"w","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"w"},{"command":"vscode-neovim.send","key":"x","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"x"},{"command":"vscode-neovim.send","key":"y","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"y"},{"command":"vscode-neovim.send","key":"z","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"z"},{"command":"vscode-neovim.send","key":"0","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"0"},{"command":"vscode-neovim.send","key":"1","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"1"},{"command":"vscode-neovim.send","key":"2","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"2"},{"command":"vscode-neovim.send","key":"3","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"3"},{"command":"vscode-neovim.send","key":"4","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"4"},{"command":"vscode-neovim.send","key":"5","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"5"},{"command":"vscode-neovim.send","key":"6","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"6"},{"command":"vscode-neovim.send","key":"7","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"7"},{"command":"vscode-neovim.send","key":"8","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"8"},{"command":"vscode-neovim.send","key":"9","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"9"},{"command":"vscode-neovim.send","key":"'","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"'"},{"command":"vscode-neovim.send","key":";","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":";"},{"command":"vscode-neovim.send","key":"/","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"/"},{"command":"vscode-neovim.send","key":"shift+'","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"\""},{"command":"vscode-neovim.send","key":"shift+;","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":":"},{"command":"vscode-neovim.send","key":"shift+4","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"$"},{"command":"vscode-neovim.send","key":"shift+5","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"%"},{"command":"vscode-neovim.send","key":"shift+g","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"G"},{"command":"vscode-neovim.send","key":"shift+v","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"V"},{"command":"vscode-neovim.send","key":"shift+y","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"Y"},{"command":"vscode-neovim.send","key":"ctrl+v","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"<C-v>"},{"command":"vscode-neovim.send","key":"backspace","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"<BS>"},{"command":"vscode-neovim.send","key":"delete","when":"neovim.init && neovim.mode != insert && editorTextFocus && focusedView == workbench.panel.output","args":"<Del>"}]},"scripts":{"lint":"eslint --fix src","lint:check":"eslint src","format":"npm run prettier && npm run stylua","format:check":"npm run prettier:check && npm run stylua:check","prettier":"prettier --ignore-path .gitignore --ignore-path .prettierignore -w .","prettier:check":"prettier --ignore-path .gitignore --ignore-path .prettierignore --check .","stylua":"stylua .","stylua:check":"stylua --check .","keybind":"node ./scripts/keybindings/index.cjs","test":"npm run test:unit && npm run test:integration","test:unit":"mocha ./out/test/unit/*.js ./out/test/unit/**/*.js","test:integration":"node ./out/test/runIntegrationTest.js","pretest:unit":"npm run test-compile","pretest:integration":"npm run test-compile","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","test-compile":"tsc -p ./","prepare":"husky","build":"vsce package -o vscode-neovim.vsix","build:dev":"vsce package --no-update-package-json -o vscode-neovim.vsix $(node -e 'console.log(`${process.env.npm_package_version}-dev`)')"},"devDependencies":{"@johnnymorganz/stylua-bin":"^0.20.0","@types/lodash-es":"^4.17.12","@types/mocha":"^10.0.6","@types/node":"^20.12.5","@types/vscode":"^1.87.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","eslint":"^8.57.0","eslint-config-prettier":"^9.1.0","eslint-plugin-import":"^2.29.1","eslint-plugin-prettier":"^5.1.3","globals":"^15.2.0","husky":"^9.0.11","mocha":"^10.4.0","prettier":"^3.2.5","source-map-support":"^0.5.19","ts-loader":"^9.5.1","typescript":"^5.4.4","typescript-eslint":"^7.8.0","webpack":"^5.91.0","webpack-cli":"^5.1.4"},"dependencies":{"@jpwilliams/waitgroup":"^2.1.1","async-mutex":"^0.5.0","fast-myers-diff":"^3.2.0","grapheme-splitter":"^1.0.4","lodash-es":"^4.17.21","neovim":"^5.1.0","ts-wcwidth":"^2.0.3"}},"location":{"$mid":1,"path":"/home/omnia/.vscode-oss/extensions/asvetliakov.vscode-neovim-1.15.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"asvetliakov","metadata":{"id":"caf8995c-5426-4bf7-9d01-f7968ebd49bb","publisherId":"ce6190db-6762-4c9c-99c7-1717b9504159","publisherDisplayName":"asvetliakov","targetPlatform":"universal","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1717822264951,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"rust-lang.rust-analyzer","uuid":"06574cb4-e5dc-4631-8174-a543a4533621"},"manifest":{"name":"rust-analyzer","displayName":"rust-analyzer","description":"Rust language support for Visual Studio Code","private":true,"icon":"icon.png","version":"0.3.1983","releaseTag":"2024-06-03","publisher":"rust-lang","repository":{"url":"https://github.com/rust-lang/rust-analyzer.git","type":"git"},"homepage":"https://rust-analyzer.github.io/","license":"MIT OR Apache-2.0","keywords":["rust"],"categories":["Formatters","Programming Languages"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"rust-analyzer invokes binaries set up by its configuration as well as the Rust toolchain's binaries. A malicious actor could exploit this to run arbitrary code on your machine."}},"engines":{"vscode":"^1.78.0"},"scripts":{"vscode:prepublish":"npm run build-base -- --minify","package":"vsce package -o rust-analyzer.vsix","build-base":"esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node16","build":"npm run build-base -- --sourcemap","watch":"npm run build-base -- --sourcemap --watch","format":"prettier --write .","format:check":"prettier --check .","lint":"eslint -c .eslintrc.js --ext ts ./src ./tests","lint:fix":"npm run lint -- --fix","typecheck":"tsc","pretest":"npm run typecheck && npm run build","test":"node ./out/tests/runTests.js"},"dependencies":{"@hpcc-js/wasm":"^2.13.0","anser":"^2.1.1","d3":"^7.8.5","d3-graphviz":"^5.0.2","vscode-languageclient":"^8.1.0"},"devDependencies":{"@tsconfig/strictest":"^2.0.1","@types/node":"~16.11.7","@types/vscode":"~1.78.1","@typescript-eslint/eslint-plugin":"^6.0.0","@typescript-eslint/parser":"^6.0.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.19.0","esbuild":"^0.18.12","eslint":"^8.44.0","eslint-config-prettier":"^8.8.0","ovsx":"^0.8.2","prettier":"^3.0.0","tslib":"^2.6.0","typescript":"^5.1.6"},"activationEvents":["workspaceContains:Cargo.toml","workspaceContains:*/Cargo.toml","workspaceContains:rust-project.json","workspaceContains:*/rust-project.json"],"main":"./out/main","contributes":{"taskDefinitions":[{"type":"cargo","required":["command"],"properties":{"label":{"type":"string"},"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}},"env":{"type":"object","patternProperties":{".+":{"type":"string"}}}}}],"commands":[{"command":"rust-analyzer.syntaxTree","title":"Show Syntax Tree","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewHir","title":"View Hir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewMir","title":"View Mir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.interpretFunction","title":"Interpret Function","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewFileText","title":"View File Text (as seen by the server)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewItemTree","title":"Debug ItemTree","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.shuffleCrateGraph","title":"Shuffle Crate Graph","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.memoryUsage","title":"Memory Usage (Clears Database)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewCrateGraph","title":"View Crate Graph","category":"rust-analyzer"},{"command":"rust-analyzer.viewFullCrateGraph","title":"View Crate Graph (Full)","category":"rust-analyzer"},{"command":"rust-analyzer.expandMacro","title":"Expand macro recursively at caret","category":"rust-analyzer"},{"command":"rust-analyzer.matchingBrace","title":"Find matching brace","category":"rust-analyzer"},{"command":"rust-analyzer.parentModule","title":"Locate parent module","category":"rust-analyzer"},{"command":"rust-analyzer.joinLines","title":"Join lines","category":"rust-analyzer"},{"command":"rust-analyzer.run","title":"Run","category":"rust-analyzer"},{"command":"rust-analyzer.copyRunCommandLine","title":"Copy Run Command Line","category":"rust-analyzer"},{"command":"rust-analyzer.debug","title":"Debug","category":"rust-analyzer"},{"command":"rust-analyzer.newDebugConfig","title":"Generate launch configuration","category":"rust-analyzer"},{"command":"rust-analyzer.analyzerStatus","title":"Status","category":"rust-analyzer"},{"command":"rust-analyzer.reloadWorkspace","title":"Reload workspace","category":"rust-analyzer"},{"command":"rust-analyzer.rebuildProcMacros","title":"Rebuild proc macros and build scripts","category":"rust-analyzer"},{"command":"rust-analyzer.restartServer","title":"Restart server","category":"rust-analyzer"},{"command":"rust-analyzer.startServer","title":"Start server","category":"rust-analyzer"},{"command":"rust-analyzer.stopServer","title":"Stop server","category":"rust-analyzer"},{"command":"rust-analyzer.onEnter","title":"Enhanced enter key","category":"rust-analyzer"},{"command":"rust-analyzer.ssr","title":"Structural Search Replace","category":"rust-analyzer"},{"command":"rust-analyzer.serverVersion","title":"Show RA Version","category":"rust-analyzer"},{"command":"rust-analyzer.openDocs","title":"Open Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openExternalDocs","title":"Open External Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openCargoToml","title":"Open Cargo.toml","category":"rust-analyzer"},{"command":"rust-analyzer.peekTests","title":"Peek Related Tests","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemUp","title":"Move Item Up","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemDown","title":"Move Item Down","category":"rust-analyzer"},{"command":"rust-analyzer.cancelFlycheck","title":"Cancel running flychecks","category":"rust-analyzer"},{"command":"rust-analyzer.runFlycheck","title":"Run flycheck","category":"rust-analyzer"},{"command":"rust-analyzer.clearFlycheck","title":"Clear flycheck diagnostics","category":"rust-analyzer"},{"command":"rust-analyzer.revealDependency","title":"Reveal File","category":"rust-analyzer"},{"command":"rust-analyzer.viewMemoryLayout","title":"View Memory Layout","category":"rust-analyzer"},{"command":"rust-analyzer.toggleCheckOnSave","title":"Toggle Check on Save","category":"rust-analyzer"}],"keybindings":[{"command":"rust-analyzer.parentModule","key":"ctrl+shift+u","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.joinLines","key":"ctrl+shift+j","when":"editorTextFocus && editorLangId == rust"}],"configuration":{"type":"object","title":"rust-analyzer","properties":{"rust-analyzer.cargoRunner":{"type":["null","string"],"default":null,"description":"Custom cargo runner extension ID."},"rust-analyzer.runnables.extraEnv":{"anyOf":[{"type":"null"},{"type":"array","items":{"type":"object","properties":{"platform":{"type":["null","string","array"],"default":null,"markdownDescription":"Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."},"mask":{"type":"string","description":"Runnable name mask"},"env":{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}}}},{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}],"default":null,"markdownDescription":"Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command."},"rust-analyzer.runnables.problemMatcher":{"type":"array","items":{"type":"string"},"default":["$rustc"],"markdownDescription":"Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`."},"rust-analyzer.statusBar.clickAction":{"type":"string","enum":["stopServer","openLogs"],"enumDescriptions":["Stop Server","Open Logs"],"default":"openLogs","markdownDescription":"Action to run when clicking the extension status bar item."},"rust-analyzer.server.path":{"type":["null","string"],"scope":"machine-overridable","default":null,"markdownDescription":"Path to rust-analyzer executable (points to bundled binary by default)."},"rust-analyzer.server.extraEnv":{"type":["null","object"],"additionalProperties":{"type":["string","number"]},"default":null,"markdownDescription":"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging."},"rust-analyzer.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"enumDescriptions":["No traces","Error only","Full log"],"default":"off","description":"Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users)."},"rust-analyzer.trace.extension":{"description":"Enable logging of VS Code extensions itself.","type":"boolean","default":false},"rust-analyzer.debug.engine":{"type":"string","enum":["auto","vadimcn.vscode-lldb","ms-vscode.cpptools"],"default":"auto","description":"Preferred debug engine.","markdownEnumDescriptions":["First try to use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), if it's not installed try to use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).","Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)","Use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)"]},"rust-analyzer.debug.sourceFileMap":{"type":["object","string"],"const":"auto","description":"Optional source file mappings passed to the debug engine.","default":{"/rustc/<id>":"${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"}},"rust-analyzer.debug.openDebugPane":{"markdownDescription":"Whether to open up the `Debug Panel` on debugging start.","type":"boolean","default":false},"rust-analyzer.debug.engineSettings":{"type":"object","default":{},"markdownDescription":"Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`"},"rust-analyzer.restartServerOnConfigChange":{"markdownDescription":"Whether to restart the server automatically when certain settings that require a restart are changed.","default":false,"type":"boolean"},"rust-analyzer.typing.continueCommentsOnNewline":{"markdownDescription":"Whether to prefix newlines after comments with the corresponding comment prefix.","default":true,"type":"boolean"},"rust-analyzer.diagnostics.previewRustcOutput":{"markdownDescription":"Whether to show the main part of the rendered rustc output of a diagnostic message.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.useRustcErrorCode":{"markdownDescription":"Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'","default":false,"type":"boolean"},"rust-analyzer.discoverProjectRunner":{"markdownDescription":"Sets the extension responsible for determining which extension the rust-analyzer extension uses to generate `rust-project.json` files. This should should only be used\n if a build system like Buck or Bazel is also in use.","default":null,"type":["null","string"]},"rust-analyzer.showUnlinkedFileNotification":{"markdownDescription":"Whether to show a notification for unlinked files asking the user to add the corresponding Cargo.toml to the linked projects setting.","default":true,"type":"boolean"},"rust-analyzer.showRequestFailedErrorNotification":{"markdownDescription":"Whether to show error notifications for failing requests.","default":true,"type":"boolean"},"rust-analyzer.showDependenciesExplorer":{"markdownDescription":"Whether to show the dependencies view.","default":true,"type":"boolean"},"rust-analyzer.testExplorer":{"markdownDescription":"Whether to show the test explorer.","default":false,"type":"boolean"},"rust-analyzer.assist.emitMustUse":{"markdownDescription":"Whether to insert #[must_use] when generating `as_` methods\nfor enum variants.","default":false,"type":"boolean"},"rust-analyzer.assist.expressionFillDefault":{"markdownDescription":"Placeholder expression to use for missing expressions in assists.","default":"todo","type":"string","enum":["todo","default"],"enumDescriptions":["Fill missing expressions with the `todo` macro","Fill missing expressions with reasonable defaults, `new` or `default` constructors."]},"rust-analyzer.assist.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for assists (Defaults to 400).","default":400,"type":"integer","minimum":0},"rust-analyzer.cachePriming.enable":{"markdownDescription":"Warm up caches on project load.","default":true,"type":"boolean"},"rust-analyzer.cachePriming.numThreads":{"markdownDescription":"How many worker threads to handle priming caches. The default `0` means to pick automatically.","default":0,"type":"number","minimum":0,"maximum":255},"rust-analyzer.cargo.allTargets":{"markdownDescription":"Pass `--all-targets` to cargo invocation.","default":true,"type":"boolean"},"rust-analyzer.cargo.autoreload":{"markdownDescription":"Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.","default":true,"type":"boolean"},"rust-analyzer.cargo.buildScripts.enable":{"markdownDescription":"Run build scripts (`build.rs`) for more precise code analysis.","default":true,"type":"boolean"},"rust-analyzer.cargo.buildScripts.invocationLocation":{"markdownDescription":"Specifies the working directory for running build scripts.\n- \"workspace\": run build scripts for a workspace in the workspace's root directory.\n    This is incompatible with `#rust-analyzer.cargo.buildScripts.invocationStrategy#` set to `once`.\n- \"root\": run build scripts in the project's root directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.","default":"workspace","type":"string","enum":["workspace","root"],"enumDescriptions":["The command will be executed in the corresponding workspace root.","The command will be executed in the project root."]},"rust-analyzer.cargo.buildScripts.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each workspace.","The command will be executed once."]},"rust-analyzer.cargo.buildScripts.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#` and\n`#rust-analyzer.cargo.buildScripts.invocationLocation#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets\n```\n.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.cargo.buildScripts.rebuildOnSave":{"markdownDescription":"Rerun proc-macros building/build-scripts running when proc-macro\nor build-script sources change and are saved.","default":true,"type":"boolean"},"rust-analyzer.cargo.buildScripts.useRustcWrapper":{"markdownDescription":"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.","default":true,"type":"boolean"},"rust-analyzer.cargo.cfgs":{"markdownDescription":"List of cfg options to enable with the given values.","default":{"debug_assertions":null,"miri":null},"type":"object"},"rust-analyzer.cargo.extraArgs":{"markdownDescription":"Extra arguments that are passed to every cargo invocation.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.cargo.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.","default":{},"type":"object"},"rust-analyzer.cargo.features":{"markdownDescription":"List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.","default":[],"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}}]},"rust-analyzer.cargo.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to cargo.","default":false,"type":"boolean"},"rust-analyzer.cargo.sysroot":{"markdownDescription":"Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.","default":"discover","type":["null","string"]},"rust-analyzer.cargo.sysrootQueryMetadata":{"markdownDescription":"Whether to run cargo metadata on the sysroot library allowing rust-analyzer to analyze\nthird-party dependencies of the standard libraries.\n\nThis will cause `cargo` to create a lockfile in your sysroot directory. rust-analyzer\nwill attempt to clean up afterwards, but nevertheless requires the location to be\nwritable to.","default":false,"type":"boolean"},"rust-analyzer.cargo.sysrootSrc":{"markdownDescription":"Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]},"rust-analyzer.cargo.target":{"markdownDescription":"Compilation target override (target triple).","default":null,"type":["null","string"]},"rust-analyzer.cargo.targetDir":{"markdownDescription":"Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` and initial build-script and proc-macro\nbuilding from locking the `Cargo.lock` at the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.","default":null,"anyOf":[{"type":"null"},{"type":"boolean"},{"type":"string"}]},"rust-analyzer.checkOnSave":{"markdownDescription":"Run the check command for diagnostics on save.","default":true,"type":"boolean"},"rust-analyzer.check.allTargets":{"markdownDescription":"Check all targets and tests (`--all-targets`). Defaults to\n`#rust-analyzer.cargo.allTargets#`.","default":null,"type":["null","boolean"]},"rust-analyzer.check.command":{"markdownDescription":"Cargo command to use for `cargo check`.","default":"check","type":"string"},"rust-analyzer.check.extraArgs":{"markdownDescription":"Extra arguments for `cargo check`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.check.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.","default":{},"type":"object"},"rust-analyzer.check.features":{"markdownDescription":"List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.","default":null,"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}},{"type":"null"}]},"rust-analyzer.check.ignore":{"markdownDescription":"List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true},"rust-analyzer.check.invocationLocation":{"markdownDescription":"Specifies the working directory for running checks.\n- \"workspace\": run checks for workspaces in the corresponding workspaces' root directories.\n    This falls back to \"root\" if `#rust-analyzer.check.invocationStrategy#` is set to `once`.\n- \"root\": run checks in the project's root directory.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.","default":"workspace","type":"string","enum":["workspace","root"],"enumDescriptions":["The command will be executed in the corresponding workspace root.","The command will be executed in the project root."]},"rust-analyzer.check.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each workspace.","The command will be executed once."]},"rust-analyzer.check.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.","default":null,"type":["null","boolean"]},"rust-analyzer.check.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.check.invocationStrategy#` and\n`#rust-analyzer.check.invocationLocation#`.\n\nIf `$saved_file` is part of the command, rust-analyzer will pass\nthe absolute path of the saved file to the provided command. This is\nintended to be used with non-Cargo build systems.\nNote that `$saved_file` is experimental and may be removed in the future.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.check.targets":{"markdownDescription":"Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.","default":null,"anyOf":[{"type":"null"},{"type":"string"},{"type":"array","items":{"type":"string"}}]},"rust-analyzer.check.workspace":{"markdownDescription":"Whether `--workspace` should be passed to `cargo check`.\nIf false, `-p <package>` will be passed instead.","default":true,"type":"boolean"},"rust-analyzer.completion.autoimport.enable":{"markdownDescription":"Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.","default":true,"type":"boolean"},"rust-analyzer.completion.autoself.enable":{"markdownDescription":"Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.","default":true,"type":"boolean"},"rust-analyzer.completion.callable.snippets":{"markdownDescription":"Whether to add parenthesis and argument snippets when completing function.","default":"fill_arguments","type":"string","enum":["fill_arguments","add_parentheses","none"],"enumDescriptions":["Add call parentheses and pre-fill arguments.","Add call parentheses.","Do no snippet completions for callables."]},"rust-analyzer.completion.fullFunctionSignatures.enable":{"markdownDescription":"Whether to show full function/method signatures in completion docs.","default":false,"type":"boolean"},"rust-analyzer.completion.limit":{"markdownDescription":"Maximum number of completions to return. If `None`, the limit is infinite.","default":null,"type":["null","integer"],"minimum":0},"rust-analyzer.completion.postfix.enable":{"markdownDescription":"Whether to show postfix snippets like `dbg`, `if`, `not`, etc.","default":true,"type":"boolean"},"rust-analyzer.completion.privateEditable.enable":{"markdownDescription":"Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.","default":false,"type":"boolean"},"rust-analyzer.completion.snippets.custom":{"markdownDescription":"Custom completion snippets.","default":{"Arc::new":{"postfix":"arc","body":"Arc::new(${receiver})","requires":"std::sync::Arc","description":"Put the expression into an `Arc`","scope":"expr"},"Rc::new":{"postfix":"rc","body":"Rc::new(${receiver})","requires":"std::rc::Rc","description":"Put the expression into an `Rc`","scope":"expr"},"Box::pin":{"postfix":"pinbox","body":"Box::pin(${receiver})","requires":"std::boxed::Box","description":"Put the expression into a pinned `Box`","scope":"expr"},"Ok":{"postfix":"ok","body":"Ok(${receiver})","description":"Wrap the expression in a `Result::Ok`","scope":"expr"},"Err":{"postfix":"err","body":"Err(${receiver})","description":"Wrap the expression in a `Result::Err`","scope":"expr"},"Some":{"postfix":"some","body":"Some(${receiver})","description":"Wrap the expression in an `Option::Some`","scope":"expr"}},"type":"object"},"rust-analyzer.completion.termSearch.enable":{"markdownDescription":"Whether to enable term search based snippets like `Some(foo.bar().baz())`.","default":false,"type":"boolean"},"rust-analyzer.completion.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for autocompletion (Defaults to 200).","default":200,"type":"integer","minimum":0},"rust-analyzer.diagnostics.disabled":{"markdownDescription":"List of rust-analyzer diagnostics to disable.","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true},"rust-analyzer.diagnostics.enable":{"markdownDescription":"Whether to show native rust-analyzer diagnostics.","default":true,"type":"boolean"},"rust-analyzer.diagnostics.experimental.enable":{"markdownDescription":"Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.remapPrefix":{"markdownDescription":"Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.","default":{},"type":"object"},"rust-analyzer.diagnostics.styleLints.enable":{"markdownDescription":"Whether to run additional style lints.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.warningsAsHint":{"markdownDescription":"List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.diagnostics.warningsAsInfo":{"markdownDescription":"List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.files.excludeDirs":{"markdownDescription":"These directories will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.files.watcher":{"markdownDescription":"Controls file watching implementation.","default":"client","type":"string","enum":["client","server"],"enumDescriptions":["Use the client (editor) to watch files for changes","Use server-side file watching"]},"rust-analyzer.highlightRelated.breakPoints.enable":{"markdownDescription":"Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.closureCaptures.enable":{"markdownDescription":"Enables highlighting of all captures of a closure while the cursor is on the `|` or move keyword of a closure.","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.exitPoints.enable":{"markdownDescription":"Enables highlighting of all exit points while the cursor is on any `return`, `?`, `fn`, or return type arrow (`->`).","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.references.enable":{"markdownDescription":"Enables highlighting of related references while the cursor is on any identifier.","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.yieldPoints.enable":{"markdownDescription":"Enables highlighting of all break points for a loop or block context while the cursor is on any `async` or `await` keywords.","default":true,"type":"boolean"},"rust-analyzer.hover.actions.debug.enable":{"markdownDescription":"Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hover.actions.enable":{"markdownDescription":"Whether to show HoverActions in Rust files.","default":true,"type":"boolean"},"rust-analyzer.hover.actions.gotoTypeDef.enable":{"markdownDescription":"Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hover.actions.implementations.enable":{"markdownDescription":"Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hover.actions.references.enable":{"markdownDescription":"Whether to show `References` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.hover.actions.run.enable":{"markdownDescription":"Whether to show `Run` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hover.documentation.enable":{"markdownDescription":"Whether to show documentation on hover.","default":true,"type":"boolean"},"rust-analyzer.hover.documentation.keywords.enable":{"markdownDescription":"Whether to show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hover.links.enable":{"markdownDescription":"Use markdown syntax for links on hover.","default":true,"type":"boolean"},"rust-analyzer.hover.memoryLayout.alignment":{"markdownDescription":"How to render the align information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]},"rust-analyzer.hover.memoryLayout.enable":{"markdownDescription":"Whether to show memory layout data on hover.","default":true,"type":"boolean"},"rust-analyzer.hover.memoryLayout.niches":{"markdownDescription":"How to render the niche information in a memory layout hover.","default":false,"type":["null","boolean"]},"rust-analyzer.hover.memoryLayout.offset":{"markdownDescription":"How to render the offset information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]},"rust-analyzer.hover.memoryLayout.size":{"markdownDescription":"How to render the size information in a memory layout hover.","default":"both","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]},"rust-analyzer.hover.show.enumVariants":{"markdownDescription":"How many variants of an enum to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0},"rust-analyzer.hover.show.fields":{"markdownDescription":"How many fields of a struct, variant or union to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0},"rust-analyzer.hover.show.traitAssocItems":{"markdownDescription":"How many associated items of a trait to display when hovering a trait.","default":null,"type":["null","integer"],"minimum":0},"rust-analyzer.imports.granularity.enforce":{"markdownDescription":"Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.","default":false,"type":"boolean"},"rust-analyzer.imports.granularity.group":{"markdownDescription":"How imports should be grouped into use statements.","default":"crate","type":"string","enum":["preserve","crate","module","item","one"],"enumDescriptions":["Do not change the granularity of any imports and preserve the original structure written by the developer.","Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.","Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.","Flatten imports so that each has its own use statement.","Merge all imports into a single use statement as long as they have the same visibility and attributes."]},"rust-analyzer.imports.group.enable":{"markdownDescription":"Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.","default":true,"type":"boolean"},"rust-analyzer.imports.merge.glob":{"markdownDescription":"Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.","default":true,"type":"boolean"},"rust-analyzer.imports.preferNoStd":{"markdownDescription":"Prefer to unconditionally use imports of the core and alloc crate, over the std crate.","default":false,"type":"boolean"},"rust-analyzer.imports.preferPrelude":{"markdownDescription":"Whether to prefer import paths containing a `prelude` module.","default":false,"type":"boolean"},"rust-analyzer.imports.prefix":{"markdownDescription":"The path structure for newly inserted paths to use.","default":"plain","type":"string","enum":["plain","self","crate"],"enumDescriptions":["Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.","Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.","Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."]},"rust-analyzer.inlayHints.bindingModeHints.enable":{"markdownDescription":"Whether to show inlay type hints for binding modes.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.chainingHints.enable":{"markdownDescription":"Whether to show inlay type hints for method chains.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.closingBraceHints.enable":{"markdownDescription":"Whether to show inlay hints after a closing `}` to indicate what item it belongs to.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.closingBraceHints.minLines":{"markdownDescription":"Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).","default":25,"type":"integer","minimum":0},"rust-analyzer.inlayHints.closureCaptureHints.enable":{"markdownDescription":"Whether to show inlay hints for closure captures.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.closureReturnTypeHints.enable":{"markdownDescription":"Whether to show inlay type hints for return types of closures.","default":"never","type":"string","enum":["always","never","with_block"],"enumDescriptions":["Always show type hints for return types of closures.","Never show type hints for return types of closures.","Only show type hints for return types of closures with blocks."]},"rust-analyzer.inlayHints.closureStyle":{"markdownDescription":"Closure notation in type and chaining inlay hints.","default":"impl_fn","type":"string","enum":["impl_fn","rust_analyzer","with_id","hide"],"enumDescriptions":["`impl_fn`: `impl FnMut(i32, u64) -> i8`","`rust_analyzer`: `|i32, u64| -> i8`","`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals","`hide`: Shows `...` for every closure type"]},"rust-analyzer.inlayHints.discriminantHints.enable":{"markdownDescription":"Whether to show enum variant discriminant hints.","default":"never","type":"string","enum":["always","never","fieldless"],"enumDescriptions":["Always show all discriminant hints.","Never show discriminant hints.","Only show discriminant hints on fieldless enum variants."]},"rust-analyzer.inlayHints.expressionAdjustmentHints.enable":{"markdownDescription":"Whether to show inlay hints for type adjustments.","default":"never","type":"string","enum":["always","never","reborrow"],"enumDescriptions":["Always show all adjustment hints.","Never show adjustment hints.","Only show auto borrow and dereference adjustment hints."]},"rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe":{"markdownDescription":"Whether to hide inlay hints for type adjustments outside of `unsafe` blocks.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.expressionAdjustmentHints.mode":{"markdownDescription":"Whether to show inlay hints as postfix ops (`.*` instead of `*`, etc).","default":"prefix","type":"string","enum":["prefix","postfix","prefer_prefix","prefer_postfix"],"enumDescriptions":["Always show adjustment hints as prefix (`*expr`).","Always show adjustment hints as postfix (`expr.*`).","Show prefix or postfix depending on which uses less parenthesis, preferring prefix.","Show prefix or postfix depending on which uses less parenthesis, preferring postfix."]},"rust-analyzer.inlayHints.implicitDrops.enable":{"markdownDescription":"Whether to show implicit drop hints.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.lifetimeElisionHints.enable":{"markdownDescription":"Whether to show inlay type hints for elided lifetimes in function signatures.","default":"never","type":"string","enum":["always","never","skip_trivial"],"enumDescriptions":["Always show lifetime elision hints.","Never show lifetime elision hints.","Only show lifetime elision hints if a return type is involved."]},"rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames":{"markdownDescription":"Whether to prefer using parameter names as the name for elided lifetime hints if possible.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.maxLength":{"markdownDescription":"Maximum length for inlay hints. Set to null to have an unlimited length.","default":25,"type":["null","integer"],"minimum":0},"rust-analyzer.inlayHints.parameterHints.enable":{"markdownDescription":"Whether to show function parameter name inlay hints at the call\nsite.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.rangeExclusiveHints.enable":{"markdownDescription":"Whether to show exclusive range inlay hints.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.reborrowHints.enable":{"markdownDescription":"Whether to show inlay hints for compiler inserted reborrows.\nThis setting is deprecated in favor of #rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.","default":"never","type":"string","enum":["always","never","mutable"],"enumDescriptions":["Always show reborrow hints.","Never show reborrow hints.","Only show mutable reborrow hints."]},"rust-analyzer.inlayHints.renderColons":{"markdownDescription":"Whether to render leading colons for type hints, and trailing colons for parameter hints.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.typeHints.enable":{"markdownDescription":"Whether to show inlay type hints for variables.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.typeHints.hideClosureInitialization":{"markdownDescription":"Whether to hide inlay type hints for `let` statements that initialize to a closure.\nOnly applies to closures with blocks, same as `#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.","default":false,"type":"boolean"},"rust-analyzer.inlayHints.typeHints.hideNamedConstructor":{"markdownDescription":"Whether to hide inlay type hints for constructors.","default":false,"type":"boolean"},"rust-analyzer.interpret.tests":{"markdownDescription":"Enables the experimental support for interpreting tests.","default":false,"type":"boolean"},"rust-analyzer.joinLines.joinAssignments":{"markdownDescription":"Join lines merges consecutive declaration and initialization of an assignment.","default":true,"type":"boolean"},"rust-analyzer.joinLines.joinElseIf":{"markdownDescription":"Join lines inserts else between consecutive ifs.","default":true,"type":"boolean"},"rust-analyzer.joinLines.removeTrailingComma":{"markdownDescription":"Join lines removes trailing commas.","default":true,"type":"boolean"},"rust-analyzer.joinLines.unwrapTrivialBlock":{"markdownDescription":"Join lines unwraps trivial blocks.","default":true,"type":"boolean"},"rust-analyzer.lens.debug.enable":{"markdownDescription":"Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.lens.enable":{"markdownDescription":"Whether to show CodeLens in Rust files.","default":true,"type":"boolean"},"rust-analyzer.lens.forceCustomCommands":{"markdownDescription":"Internal config: use custom client-side commands even when the\nclient doesn't set the corresponding capability.","default":true,"type":"boolean"},"rust-analyzer.lens.implementations.enable":{"markdownDescription":"Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.lens.location":{"markdownDescription":"Where to render annotations.","default":"above_name","type":"string","enum":["above_name","above_whole_item"],"enumDescriptions":["Render annotations above the name of the item.","Render annotations above the whole item, including documentation comments and attributes."]},"rust-analyzer.lens.references.adt.enable":{"markdownDescription":"Whether to show `References` lens for Struct, Enum, and Union.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.references.enumVariant.enable":{"markdownDescription":"Whether to show `References` lens for Enum Variants.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.references.method.enable":{"markdownDescription":"Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.references.trait.enable":{"markdownDescription":"Whether to show `References` lens for Trait.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.run.enable":{"markdownDescription":"Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.linkedProjects":{"markdownDescription":"Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, `.rs` files (which will be treated as standalone files) or JSON\nobjects in `rust-project.json` format.","default":[],"type":"array","items":{"type":["string","object"]}},"rust-analyzer.lru.capacity":{"markdownDescription":"Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.","default":null,"type":["null","integer"],"minimum":0},"rust-analyzer.lru.query.capacities":{"markdownDescription":"Sets the LRU capacity of the specified queries.","default":{},"type":"object"},"rust-analyzer.notifications.cargoTomlNotFound":{"markdownDescription":"Whether to show `can't find Cargo.toml` error message.","default":true,"type":"boolean"},"rust-analyzer.notifications.unindexedProject":{"markdownDescription":"Whether to send an UnindexedProject notification to the client.","default":false,"type":"boolean"},"rust-analyzer.numThreads":{"markdownDescription":"How many worker threads in the main loop. The default `null` means to pick automatically.","default":null,"type":["null","integer"],"minimum":0},"rust-analyzer.procMacro.attributes.enable":{"markdownDescription":"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.","default":true,"type":"boolean"},"rust-analyzer.procMacro.enable":{"markdownDescription":"Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.","default":true,"type":"boolean"},"rust-analyzer.procMacro.ignored":{"markdownDescription":"These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.","default":{},"type":"object"},"rust-analyzer.procMacro.server":{"markdownDescription":"Internal config, path to proc-macro server executable.","default":null,"type":["null","string"]},"rust-analyzer.references.excludeImports":{"markdownDescription":"Exclude imports from find-all-references.","default":false,"type":"boolean"},"rust-analyzer.references.excludeTests":{"markdownDescription":"Exclude tests from find-all-references.","default":false,"type":"boolean"},"rust-analyzer.runnables.command":{"markdownDescription":"Command to be executed instead of 'cargo' for runnables.","default":null,"type":["null","string"]},"rust-analyzer.runnables.extraArgs":{"markdownDescription":"Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.runnables.extraTestBinaryArgs":{"markdownDescription":"Additional arguments to be passed through Cargo to launched tests, benchmarks, or\ndoc-tests.\n\nUnless the launched target uses a\n[custom test harness](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field),\nthey will end up being interpreted as options to\n[`rustc`’s built-in test harness (“libtest”)](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments).","default":["--show-output"],"type":"array","items":{"type":"string"}},"rust-analyzer.rustc.source":{"markdownDescription":"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]},"rust-analyzer.rustfmt.extraArgs":{"markdownDescription":"Additional arguments to `rustfmt`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.rustfmt.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.rustfmt.rangeFormatting.enable":{"markdownDescription":"Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.","default":false,"type":"boolean"},"rust-analyzer.semanticHighlighting.doc.comment.inject.enable":{"markdownDescription":"Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.","default":true,"type":"boolean"},"rust-analyzer.semanticHighlighting.nonStandardTokens":{"markdownDescription":"Whether the server is allowed to emit non-standard tokens and modifiers.","default":true,"type":"boolean"},"rust-analyzer.semanticHighlighting.operator.enable":{"markdownDescription":"Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.","default":true,"type":"boolean"},"rust-analyzer.semanticHighlighting.operator.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.","default":false,"type":"boolean"},"rust-analyzer.semanticHighlighting.punctuation.enable":{"markdownDescription":"Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.","default":false,"type":"boolean"},"rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang":{"markdownDescription":"When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.","default":false,"type":"boolean"},"rust-analyzer.semanticHighlighting.punctuation.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.","default":false,"type":"boolean"},"rust-analyzer.semanticHighlighting.strings.enable":{"markdownDescription":"Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"},"rust-analyzer.signatureInfo.detail":{"markdownDescription":"Show full signature of the callable. Only shows parameters if disabled.","default":"full","type":"string","enum":["full","parameters"],"enumDescriptions":["Show the entire signature.","Show only the parameters."]},"rust-analyzer.signatureInfo.documentation.enable":{"markdownDescription":"Show documentation.","default":true,"type":"boolean"},"rust-analyzer.typing.autoClosingAngleBrackets.enable":{"markdownDescription":"Whether to insert closing angle brackets when typing an opening angle bracket of a generic argument list.","default":false,"type":"boolean"},"rust-analyzer.workspace.symbol.search.kind":{"markdownDescription":"Workspace symbol search kind.","default":"only_types","type":"string","enum":["only_types","all_symbols"],"enumDescriptions":["Search for types only.","Search for all symbols kinds."]},"rust-analyzer.workspace.symbol.search.limit":{"markdownDescription":"Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.","default":128,"type":"integer","minimum":0},"rust-analyzer.workspace.symbol.search.scope":{"markdownDescription":"Workspace symbol search scope.","default":"workspace","type":"string","enum":["workspace","workspace_and_dependencies"],"enumDescriptions":["Search in current workspace only.","Search in current workspace and dependencies."]}}},"configurationDefaults":{"explorer.fileNesting.patterns":{"Cargo.toml":"Cargo.lock"}},"problemPatterns":[{"name":"rustc","patterns":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]},{"name":"rustc-json","patterns":[{"regexp":"^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$","message":1,"file":2,"line":3,"endLine":4,"column":5,"endColumn":6}]},{"name":"rust-panic","patterns":[{"regexp":"^thread '.*' panicked at (.*):(\\d*):(\\d*):$","file":1,"line":2,"column":3},{"regexp":"(.*)","message":1}]}],"languages":[{"id":"ra_syntax_tree","extensions":[".rast"]},{"id":"rust","extensions":[".rs"],"aliases":["Rust","rs"],"configuration":"language-configuration.json"}],"grammars":[{"language":"ra_syntax_tree","scopeName":"source.ra_syntax_tree","path":"ra_syntax_tree.tmGrammar.json"}],"problemMatchers":[{"name":"rustc","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc"},{"name":"rustc-json","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc-json"},{"name":"rust-panic","owner":"rust-panic","source":"panic","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rust-panic"},{"name":"rustc-watch","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"background":{"beginsPattern":"^\\[Running\\b","endsPattern":"^\\[Finished running\\b"},"pattern":"$rustc"}],"colors":[{"id":"rust_analyzer.syntaxTreeBorder","description":"Color of the border displayed in the Rust source code for the selected syntax node (see \"Show Syntax Tree\" command)","defaults":{"dark":"#ffffff","light":"#b700ff","highContrast":"#b700ff"}}],"semanticTokenTypes":[{"id":"angle","description":"Style for < or >","superType":"punctuation"},{"id":"arithmetic","description":"Style for arithmetic operators","superType":"operator"},{"id":"attribute","description":"Style for attributes"},{"id":"attributeBracket","description":"Style for attribute invocation brackets, that is the `#[` and `]` tokens","superType":"punctuation"},{"id":"bitwise","description":"Style for bitwise operators","superType":"operator"},{"id":"boolean","description":"Style for boolean literals","superType":"keyword"},{"id":"brace","description":"Style for { or }","superType":"punctuation"},{"id":"bracket","description":"Style for [ or ]","superType":"punctuation"},{"id":"builtinAttribute","description":"Style for builtin attributes","superType":"attribute"},{"id":"builtinType","description":"Style for builtin types","superType":"type"},{"id":"character","description":"Style for character literals","superType":"string"},{"id":"colon","description":"Style for :","superType":"punctuation"},{"id":"comma","description":"Style for ,","superType":"punctuation"},{"id":"comparison","description":"Style for comparison operators","superType":"operator"},{"id":"constParameter","description":"Style for const generics"},{"id":"const","description":"Style for consts","superType":"variable"},{"id":"derive","description":"Style for derives","superType":"attribute"},{"id":"deriveHelper","description":"Style for derive helpers","superType":"attribute"},{"id":"dot","description":"Style for .","superType":"punctuation"},{"id":"escapeSequence","description":"Style for char or byte escapes in strings"},{"id":"formatSpecifier","description":"Style for {} placeholders in format strings"},{"id":"invalidEscapeSequence","description":"Style for invalid char or byte escapes in strings"},{"id":"label","description":"Style for labels"},{"id":"lifetime","description":"Style for lifetimes"},{"id":"logical","description":"Style for logic operators","superType":"operator"},{"id":"macroBang","description":"Style for the ! token of macro calls","superType":"punctuation"},{"id":"parenthesis","description":"Style for ( or )","superType":"punctuation"},{"id":"procMacro","description":"Style for proc macro code","superType":"macro"},{"id":"punctuation","description":"Style for generic punctuation"},{"id":"operator","description":"Style for operators","superType":"punctuation"},{"id":"selfKeyword","description":"Style for the self keyword","superType":"keyword"},{"id":"selfTypeKeyword","description":"Style for the self type keyword","superType":"keyword"},{"id":"semicolon","description":"Style for ;","superType":"punctuation"},{"id":"static","description":"Style for statics","superType":"variable"},{"id":"toolModule","description":"Style for tool module attributes","superType":"decorator"},{"id":"typeAlias","description":"Style for type aliases","superType":"type"},{"id":"union","description":"Style for C-style untagged unions","superType":"type"},{"id":"unresolvedReference","description":"Style for names which can not be resolved due to compilation errors"}],"semanticTokenModifiers":[{"id":"async","description":"Style for async functions and the `async` and `await` keywords"},{"id":"attribute","description":"Style for elements within attributes"},{"id":"callable","description":"Style for locals whose types implements one of the `Fn*` traits"},{"id":"constant","description":"Style for compile-time constants"},{"id":"consuming","description":"Style for locals that are being consumed when use in a function call"},{"id":"controlFlow","description":"Style for control-flow related tokens, this includes the `?` operator"},{"id":"crateRoot","description":"Style for names resolving to a crate root"},{"id":"injected","description":"Style for doc-string injected highlighting like rust source blocks in documentation"},{"id":"intraDocLink","description":"Style for intra doc links in doc-strings"},{"id":"library","description":"Style for items that are defined outside of the current crate"},{"id":"macro","description":"Style for tokens inside of macro calls"},{"id":"mutable","description":"Style for mutable locals and statics as well as functions taking `&mut self`"},{"id":"procMacro","description":"Style for tokens inside of proc-macro calls"},{"id":"public","description":"Style for items that are from the current crate and are `pub`"},{"id":"reference","description":"Style for locals behind a reference and functions taking `self` by reference"},{"id":"trait","description":"Style for associated trait items"},{"id":"unsafe","description":"Style for unsafe operations, like unsafe function calls, as well as the `unsafe` token"}],"semanticTokenScopes":[{"language":"rust","scopes":{"attribute":["meta.attribute.rust"],"boolean":["constant.language.boolean.rust"],"builtinType":["support.type.primitive.rust"],"constParameter":["constant.other.caps.rust"],"enum":["entity.name.type.enum.rust"],"formatSpecifier":["punctuation.section.embedded.rust"],"function":["entity.name.function.rust"],"interface":["entity.name.type.trait.rust"],"keyword":["keyword.other.rust"],"keyword.controlFlow":["keyword.control.rust"],"lifetime":["storage.modifier.lifetime.rust"],"macroBang":["entity.name.function.macro.rust"],"method":["entity.name.function.rust"],"struct":["entity.name.type.struct.rust"],"typeAlias":["entity.name.type.declaration.rust"],"union":["entity.name.type.union.rust"],"variable":["variable.other.rust"],"variable.constant":["variable.other.constant.rust"],"*.mutable":["markup.underline"]}}],"menus":{"commandPalette":[{"command":"rust-analyzer.syntaxTree","when":"inRustProject"},{"command":"rust-analyzer.viewHir","when":"inRustProject"},{"command":"rust-analyzer.viewFileText","when":"inRustProject"},{"command":"rust-analyzer.expandMacro","when":"inRustProject"},{"command":"rust-analyzer.matchingBrace","when":"inRustProject"},{"command":"rust-analyzer.parentModule","when":"inRustProject"},{"command":"rust-analyzer.joinLines","when":"inRustProject"},{"command":"rust-analyzer.run","when":"inRustProject"},{"command":"rust-analyzer.debug","when":"inRustProject"},{"command":"rust-analyzer.newDebugConfig","when":"inRustProject"},{"command":"rust-analyzer.analyzerStatus","when":"inRustProject"},{"command":"rust-analyzer.memoryUsage","when":"inRustProject"},{"command":"rust-analyzer.reloadWorkspace","when":"inRustProject"},{"command":"rust-analyzer.restartServer","when":"inRustProject"},{"command":"rust-analyzer.onEnter","when":"inRustProject"},{"command":"rust-analyzer.ssr","when":"inRustProject"},{"command":"rust-analyzer.serverVersion","when":"inRustProject"},{"command":"rust-analyzer.openDocs","when":"inRustProject"},{"command":"rust-analyzer.openCargoToml","when":"inRustProject"},{"command":"rust-analyzer.viewMemoryLayout","when":"inRustProject"}],"editor/context":[{"command":"rust-analyzer.peekTests","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1000"},{"command":"rust-analyzer.openDocs","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1001"}]},"views":{"explorer":[{"id":"rustDependencies","name":"Rust Dependencies","when":"inRustProject && config.rust-analyzer.showDependenciesExplorer"}]},"jsonValidation":[{"fileMatch":"rust-project.json","url":"https://json.schemastore.org/rust-project.json"}]}},"location":{"$mid":1,"path":"/home/omnia/.vscode-oss/extensions/rust-lang.rust-analyzer-0.3.1983-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"rust-lang","metadata":{"id":"06574cb4-e5dc-4631-8174-a543a4533621","publisherId":"cb14a7a7-a188-40bd-a953-e0a20757c5dd","publisherDisplayName":"rust-lang","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1717822287394,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]}]}